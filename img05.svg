<?xml version="1.0" encoding="utf-8"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="87 79 1170.4668 892.582031" preserveAspectRatio="xMinYMin meet">
  <!--
This diagram was created with e!Sankey 5 calc
More information at www.e-sankey.com
-->
  <defs>
    <filter id="opacityFilter" width="150%" height="150%">
      <feColorMatrix type="matrix" values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.3 0 " />
    </filter>
    <filter id="highlightFilter" width="150%" height="150%">
      <feColorMatrix type="matrix" values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0 " />
    </filter>
    <filter id="ttBlur" width="150%" height="150%">
      <feGaussianBlur id="ttBlurFilter" x="0" y="0" width="1" height="1" stdDeviation="3" result="blur" />
      <feMerge result="merge">
        <feMergeNode in="SourceGraphic" />
        <feMergeNode in="blur" />
      </feMerge>
    </filter>
  </defs>
  <g id="SvgObjects" class="SvgObjectsContainer" transform="scale(1)" text-rendering="optimizeLegibility" image-rendering="optimizeQuality" font-family="Microsoft Sans Serif" font-size="10pt">
    <g id="SvgSankey">
      <rect id="SvgSankeyBackground" x="87" y="79" width="1170.4668" height="892.582031" fill="#FFFFFF" opacity="0" />
      <path fill="none" stroke="none" d="M0 0 L100 0 100 100 0 100 Z " />
      <g id="" class="processContainer">
        <rect class="processShape" fill="rgb(228,240,229)" fill-opacity="0.7490196" stroke="rgb(42,96,47)" x="536" y="248" width="64" height="112" />
        <text font-size="9pt" fill="rgb(36,80,0)" id="1" class="label">
          <tspan x="548.5" y="299">Battery</tspan>
          <tspan x="543.5" y="312.582031">Charging</tspan>
        </text>
      </g>
      <g id="2" class="processContainer">
        <rect class="processShape" fill="rgb(228,240,229)" fill-opacity="0.7490196" stroke="rgb(42,96,47)" x="360" y="248" width="64" height="112" />
        <text font-size="9pt" fill="rgb(36,80,0)" id="3" class="label">
          <tspan x="372.5" y="299">Battery</tspan>
          <tspan x="364.5" y="312.582031">Discharge</tspan>
        </text>
      </g>
      <g id="4" class="processContainer">
        <rect class="processShape" fill="rgb(228,240,229)" fill-opacity="0.7490196" stroke="rgb(42,96,47)" x="192" y="472" width="105.84" height="32" />
        <text font-size="9pt" fill="rgb(36,80,0)" id="5" class="label">
          <tspan x="208" y="499">Electr. Energy</tspan>
        </text>
      </g>
      <g id="6" class="processContainer">
        <rect class="processShape" fill="rgb(228,240,229)" fill-opacity="0.7490196" stroke="rgb(42,96,47)" x="200" y="584" width="96" height="32" />
        <text font-size="9pt" fill="rgb(36,80,0)" id="7" class="label">
          <tspan x="216" y="619">Power Train</tspan>
        </text>
      </g>
      <g id="8" class="processContainer">
        <rect class="processShape" fill="rgb(228,240,229)" fill-opacity="0.7490196" stroke="rgb(42,96,47)" x="216" y="712" width="81.5814743" height="32" />
        <text font-size="9pt" fill="rgb(36,80,0)" id="9" class="label">
          <tspan x="240" y="739">Wheel</tspan>
        </text>
      </g>
      <g id="10" class="processContainer" />
      <g id="11" class="processContainer">
        <rect class="processShape" fill="rgb(228,240,229)" fill-opacity="0.7490196" stroke="rgb(42,96,47)" x="992" y="408" width="26.780798" height="32" />
        <text font-size="9pt" fill="rgb(36,80,0)" id="12" class="label">
          <tspan x="1032" y="419">Electric</tspan>
          <tspan x="1032" y="432.582031">Energy</tspan>
        </text>
      </g>
      <g id="13" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="196_0" class="flow" stroke="none" d="M698.880554 192.5 L757.119446 192.5 L757.119446 264 L757.119446 273.835175 L756.9643 277.7842 L756.499756 281.708954 L755.72876 285.585083 L754.655945 289.388824 L753.2881 293.096649 L751.633545 296.6857 L749.702454 300.1339 L747.5068 303.419952 L745.06 306.5236 L742.3774 309.42572 L739.4752 312.108429 L736.3716 314.5551 L733.0855 316.7508 L729.6374 318.681854 L726.0482 320.3365 L722.340454 321.704376 L718.5368 322.7771 L714.6606 323.548126 L710.73584 324.012634 L706.7868 324.167816 L600.5 324.167816 L600.5 265.928925 L698.880554 265.928925 L698.880554 264 Z" />
        </g>
        <text font-size="9pt" fill="rgb(255,255,255)" id="14" class="label">
          <tspan x="710.0325" y="235">100.0 %</tspan>
        </text>
      </g>
      <g id="15" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="197_0" class="flow" stroke="none" d="M535.5 266.690338 L535.5 341.690338 L495.3849 341.690338 L464.3849 341.5 L424.5 341.5 L424.5 266.5 L464.6151 266.5 L495.6151 266.690338 Z" />
        </g>
        <text font-size="9pt" fill="rgb(255,255,255)" id="16" class="label">
          <tspan x="462.349731" y="322.94928">98.5 %</tspan>
        </text>
      </g>
      <g id="17" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="198_0" class="flow" stroke="none" d="M359.5 268 L359.5 341.5 L281.381927 341.5 L281.67 341.148926 L281.669983 471.5 L208.17 471.5 L208.17 338.1064 L208.208374 335.873566 L208.32341 333.643372 L208.515 331.418427 L208.782928 329.201355 L209.126846 326.994843 L209.546356 324.801453 L210.040985 322.623718 L210.610123 320.4643 L211.253113 318.325684 L211.969208 316.210419 L212.757538 314.120972 L213.617157 312.059875 L214.547119 310.0295 L215.546234 308.032318 L216.6134 306.070648 L217.747314 304.146759 L218.94664 302.263 L220.210022 300.421478 L221.535858 298.624481 L222.922684 296.8741 L227.4543 291.3521 L229.291962 289.2111 L231.222366 287.15332 L233.241776 285.1828 L235.3462 283.3034 L237.531616 281.518829 L239.793716 279.832458 L242.128067 278.24765 L244.530182 276.7675 L246.995255 275.394867 L249.518616 274.132446 L252.095245 272.9827 L254.7201 271.947876 L257.388123 271.03 L260.094116 270.230835 L262.832764 269.551941 L265.5987 268.99472 L268.386475 268.560181 L271.190765 268.249176 L274.0061 268.062317 L276.826935 268 Z" />
        </g>
        <text font-size="9pt" fill="rgb(255,255,255)" id="18" class="label">
          <tspan x="267.8592" y="322.670166">98.0 %</tspan>
        </text>
      </g>
      <g id="19" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="199_0" class="flow" stroke="none" d="M212.579987 504.5 L281.669983 504.5 L281.669983 452.561462 L282.544983 451.561462 L282.544983 583.5 L213.455 583.5 L213.455 635.438538 L212.579987 636.438538 Z" />
        </g>
        <text font-size="9pt" fill="rgb(255,255,255)" id="20" class="label">
          <tspan x="231.02977" y="547">94.0 %</tspan>
        </text>
      </g>
      <g id="21" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="200_0" class="flow" stroke="none" d="M225.841858 616.5 L282.544983 616.5 L282.544983 654.063538 L285.1423 669.063538 L285.1423 711.5 L228.439178 711.5 L228.439178 673.936462 L225.841858 658.936462 Z" />
        </g>
        <text font-size="9pt" fill="rgb(255,255,255)" id="22" class="label">
          <tspan x="247.999969" y="683">82.1 %</tspan>
        </text>
      </g>
      <g id="23" class="processContainer">
        <rect class="processShape" fill="rgb(228,240,229)" fill-opacity="0.7490196" stroke="rgb(42,96,47)" x="464" y="848" width="64" height="39.9749222" />
        <text font-size="9pt" fill="rgb(36,80,0)" id="24" class="label">
          <tspan x="469.5" y="859">Kinetic</tspan>
          <tspan x="468.5" y="872.582031">Energy</tspan>
        </text>
      </g>
      <g id="25" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="207_0" class="flow" stroke="none" d="M257.33255 744.5 L285.1423 744.5 L285.1423 842.28 L285.1567 842.886536 L285.199921 843.4917 L285.2718 844.0941 L285.3722 844.692444 L285.5009 845.285339 L285.657562 845.87146 L285.841919 846.4495 L286.0535 847.0181 L286.29187 847.57605 L286.556458 848.122 L286.846649 848.6548 L287.1618 849.1732 L287.501251 849.6761 L287.864166 850.162231 L288.249756 850.6306 L288.657135 851.0802 L289.085449 851.509949 L289.533661 851.918762 L290.000763 852.305969 L290.485748 852.670532 L288.6349 851.3469 L289.009125 851.605835 L289.3912 851.853 L289.780762 852.088257 L290.17746 852.3113 L290.580872 852.5219 L290.990631 852.7199 L291.406342 852.905 L291.8276 853.0772 L292.254 853.2362 L292.68512 853.381958 L293.120544 853.5142 L293.559875 853.632935 L294.0027 853.737854 L294.448517 853.8291 L294.896973 853.906433 L295.347626 853.9697 L295.800018 854.019043 L296.253723 854.0544 L296.708344 854.075562 L297.163361 854.0826 L463.5 854.0826 L463.5 881.8924 L297.163361 881.8924 L295.845245 881.871948 L294.528381 881.8106 L293.214081 881.7084 L291.9036 881.5654 L290.598145 881.3819 L289.299042 881.157959 L288.0075 880.893738 L286.7248 880.5896 L285.4521 880.2458 L284.190735 879.8627 L282.941864 879.440552 L281.7067 878.9799 L280.48642 878.4812 L279.2822 877.944763 L278.0952 877.3713 L276.9266 876.7612 L275.777466 876.1151 L274.648956 875.4337 L273.542145 874.717651 L272.458069 873.9675 L274.308929 875.291138 L272.768158 874.133 L271.2841 872.903 L269.8601 871.603943 L268.49942 870.2388 L267.205078 868.8104 L265.98 867.322266 L264.827 865.777649 L263.7486 864.180054 L262.747284 862.532959 L261.825317 860.8403 L260.984741 859.1057 L260.2275 857.3332 L259.5553 855.5267 L258.969574 853.6903 L258.4717 851.8282 L258.062866 849.9445 L257.7439 848.0436 L257.515533 846.129639 L257.378326 844.207 L257.33255 842.28 Z" />
        </g>
        <text font-size="9pt" fill="rgb(255,255,255)" id="26" class="label">
          <tspan x="304" y="875.000061">49.0 %</tspan>
        </text>
      </g>
      <g id="27" class="processContainer">
        <rect class="processShape" fill="rgb(228,240,229)" fill-opacity="0.7490196" stroke="rgb(42,96,47)" x="992" y="688" width="32.7794571" height="32" />
        <text font-size="9pt" fill="rgb(36,80,0)" id="28" class="label">
          <tspan x="1032" y="699">Wheel</tspan>
        </text>
      </g>
      <g id="29" class="processContainer">
        <rect class="processShape" fill="rgb(228,240,229)" fill-opacity="0.7490196" stroke="rgb(42,96,47)" x="992" y="544" width="31.140461" height="32" />
        <text font-size="9pt" fill="rgb(36,80,0)" id="30" class="label">
          <tspan x="1030.5" y="555">Power</tspan>
          <tspan x="1034" y="568.582031">Train</tspan>
        </text>
      </g>
      <g id="31" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="220_0" class="flow" stroke="none" d="M528.5 876.895447 L528.5 854.0826 L693.6457 854.0826 L693.791 854.082 L693.93634 854.0803 L694.081665 854.077454 L694.2269 854.0734 L694.3722 854.0683 L694.5174 854.062 L694.662537 854.054565 L694.8077 854.0461 L694.952637 854.0364 L695.0976 854.0255 L695.242432 854.01355 L695.3872 854.000366 L695.53186 853.986145 L695.676331 853.9708 L695.82074 853.9543 L695.965 853.9366 L696.109131 853.917847 L696.2531 853.8979 L696.3969 853.8769 L696.5405 853.854736 L987.3619 807.7826 L988.1531 807.6284 L988.9314 807.4187 L989.692932 807.1546 L990.43396 806.837341 L991.1507 806.4686 L991.8396 806.0501 L992.497253 805.584045 L993.120361 805.072632 L993.70575 804.518555 L994.250549 803.9245 L994.7521 803.293457 L995.207764 802.62854 L995.6153 801.9331 L995.9727 801.2107 L996.278259 800.4647 L996.5304 799.699158 L996.7278 798.9176 L996.869446 798.124146 L996.9547 797.3226 L996.9833 796.517 L996.9833 720.5 L1019.79614 720.5 L1019.79614 796.517 L1019.71069 798.9338 L1019.45477 801.3384 L1019.02966 803.719 L1018.4375 806.063538 L1017.68121 808.3605 L1016.76459 810.598267 L1015.6922 812.765747 L1014.46948 814.852051 L1013.10242 816.8468 L1011.59784 818.7399 L1009.96344 820.5222 L1008.20715 822.1846 L1006.33783 823.7187 L1004.36487 825.117 L1002.29816 826.372437 L1000.14783 827.4788 L997.924744 828.4306 L995.64 829.2229 L993.305054 829.8519 L990.931458 830.314453 L700.1101 876.3866 L699.789246 876.4361 L699.4682 876.4831 L699.1467 876.5276 L698.8249 876.5695 L698.502747 876.608948 L698.180237 876.6459 L697.857544 876.680237 L697.534546 876.712036 L697.2113 876.741333 L696.8879 876.768066 L696.5642 876.792236 L696.2404 876.8139 L695.916443 876.833 L695.592346 876.8496 L695.268066 876.8636 L694.9437 876.875061 L694.619263 876.884 L694.294739 876.8904 L693.9702 876.8942 L693.6457 876.895447 Z" />
        </g>
        <text font-size="9pt" fill="rgb(255,255,255)" id="32" class="label">
          <tspan x="568" y="876.099243">82.0 %</tspan>
        </text>
      </g>
      <g id="33" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="221_0" class="flow" stroke="none" d="M1018.65796 687.5 L996.9833 687.5 L996.9833 647.543762 L996.7329 616.543762 L996.7329 576.5 L1018.40759 576.5 L1018.40759 616.456238 L1018.65796 647.456238 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="34" class="label">
          <tspan x="944.2504" y="691">95.0 %</tspan>
        </text>
      </g>
      <g id="35" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="222_0" class="flow" stroke="none" d="M1015.38013 543.5 L996.7329 543.5 L996.7329 503.634979 L996.0668 480.634979 L996.0668 440.5 L1014.714 440.5 L1014.714 480.365021 L1015.38013 503.365021 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="36" class="label">
          <tspan x="944.666" y="547">86.0 %</tspan>
        </text>
      </g>
      <g id="37" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="223_0" class="flow" stroke="none" d="M1013.97 407.5 L996.0668 407.5 L996.0668 364.846222 L996.0295 363.877472 L995.918 362.914429 L995.733032 361.9628 L995.475464 361.028168 L995.1469 360.116058 L994.7494 359.231873 L994.285156 358.380768 L993.756958 357.5678 L993.1679 356.797821 L992.521545 356.0753 L991.8216 355.40448 L991.0722 354.7894 L990.2779 354.233643 L989.443237 353.740479 L988.5732 353.312836 L987.6729 352.953217 L986.7476 352.663757 L985.8029 352.4462 L984.844238 352.301727 L983.8773 352.2313 L688.2072 342.083435 L688.171143 342.082245 L688.1351 342.0811 L688.099 342.080017 L688.062866 342.078979 L688.026855 342.078033 L687.9907 342.077118 L687.954651 342.0763 L687.9185 342.075531 L687.882446 342.074829 L687.8464 342.074158 L687.8103 342.073578 L687.7742 342.073029 L687.7381 342.072571 L687.702 342.072174 L687.6659 342.071838 L687.6298 342.071564 L687.5937 342.07135 L687.5576 342.071167 L687.5215 342.0711 L687.4854 342.071075 L600.5 342.071075 L600.5 324.167816 L687.4854 324.167816 L687.552246 324.167847 L687.619 324.16803 L687.685852 324.168335 L687.7526 324.168732 L687.819458 324.16925 L687.8862 324.1699 L687.953064 324.1706 L688.0199 324.171478 L688.0867 324.172455 L688.1535 324.173523 L688.2202 324.174744 L688.287048 324.176056 L688.3538 324.1775 L688.420654 324.179047 L688.4874 324.1807 L688.5542 324.1825 L688.621 324.1844 L688.6878 324.186371 L688.7545 324.1885 L688.82135 324.190735 L984.491455 334.3386 L986.829834 334.508942 L989.148132 334.858246 L991.4329 335.38446 L993.6705 336.084442 L995.8477 336.954132 L997.9519 337.988342 L999.9704 339.180969 L1001.89142 340.525055 L1003.70367 342.012573 L1005.3963 343.6348 L1006.95953 345.3821 L1008.38403 347.244324 L1009.66138 349.2103 L1010.78406 351.268555 L1011.74554 353.4069 L1012.54004 355.6127 L1013.16284 357.873016 L1013.61041 360.174438 L1013.87994 362.5034 L1013.97 364.846222 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="38" class="label">
          <tspan x="944.163757" y="404.9773">96.0 %</tspan>
        </text>
      </g>
      <g id="39" class="processContainer">
        <text font-size="9pt" fill="rgb(36,80,0)" id="40" class="label">
          <tspan x="488" y="195">Charging Losses</tspan>
        </text>
      </g>
      <g id="41" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="230_0" class="flow" stroke="none" d="M535.5 265.928925 L535.5 266.690338 L517.2132 266.690338 L515.519 266.623779 L513.835144 266.4245 L512.1722 266.0937 L510.5403 265.633484 L508.949554 265.046631 L507.40976 264.336731 L505.93042 263.50827 L504.5206 262.566284 L503.1891 261.516571 L501.944 260.365631 L500.79306 259.120544 L499.743347 257.789032 L498.801361 256.3792 L497.9729 254.899857 L497.263 253.360062 L496.676147 251.769318 L496.215942 250.137436 L495.885132 248.474472 L495.685852 246.79068 L495.6193 245.096436 L495.6193 224 L495.6193 192.7198 L496 192.5 L496.3807 192.7198 L496.3807 224 L496.3807 245.096436 L496.444946 246.730927 L496.6372 248.355362 L496.9563 249.959671 L497.40033 251.534027 L497.9665 253.06868 L498.6513 254.554184 L499.4506 255.981384 L500.359375 257.341461 L501.37204 258.626038 L502.4824 259.82724 L503.6836 260.9376 L504.96817 261.950256 L506.328247 262.859039 L507.755463 263.658325 L509.240936 264.34314 L510.7756 264.9093 L512.3499 265.353333 L513.9543 265.672424 L515.5787 265.8647 L517.2132 265.928925 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="42" class="label">
          <tspan x="456" y="211">1.0 %</tspan>
        </text>
      </g>
      <g id="43" class="processContainer">
        <text font-size="9pt" fill="rgb(36,80,0)" id="44" class="label">
          <tspan x="464" y="419">Charging Losses</tspan>
          <tspan x="464" y="432.582031">(Recuperation)</tspan>
        </text>
      </g>
      <g id="45" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="237_0" class="flow" stroke="none" d="M535.5 341.690338 L535.5 342.071075 L522.6353 342.071075 L521.0735 342.123444 L519.5187 342.280273 L517.9779 342.5409 L516.457947 342.9041 L514.9658 343.368317 L513.5081 343.931427 L512.0914 344.590881 L510.722 345.34375 L509.4061 346.186646 L508.149628 347.115753 L506.95816 348.126984 L505.837128 349.2157 L504.791565 350.377045 L503.82608 351.6058 L502.945068 352.896484 L502.1525 354.2433 L501.451874 355.640137 L500.846375 357.08075 L500.338745 358.5587 L499.931244 360.067322 L496.972229 372.687439 L496.8963 373.019867 L496.8242 373.353149 L496.755951 373.6872 L496.691559 374.022064 L496.631 374.357635 L496.574341 374.693878 L496.521545 375.030731 L496.472626 375.3682 L496.4276 375.7062 L496.386475 376.0447 L496.349243 376.383636 L496.315918 376.723 L496.2865 377.0627 L496.261017 377.40274 L496.2394 377.743042 L496.221771 378.083557 L496.208038 378.424255 L496.1982 378.765137 L496.192322 379.106049 L496.190369 379.447021 L496.190369 399.3901 L496 399.5 L495.809631 399.3901 L495.809631 379.447021 L495.811646 379.101654 L495.8176 378.756348 L495.827545 378.411133 L495.841461 378.06604 L495.859344 377.72113 L495.8812 377.376434 L495.907043 377.032074 L495.936829 376.687958 L495.970581 376.344269 L496.0083 376.000946 L496.049927 375.6581 L496.095551 375.315765 L496.145081 374.973969 L496.198547 374.632782 L496.255951 374.2922 L496.3173 373.9523 L496.382538 373.613159 L496.45163 373.27478 L496.524658 372.937225 L496.601563 372.600525 L499.560577 359.9804 L499.974731 358.447174 L500.490662 356.945068 L501.106049 355.480957 L501.818085 354.061279 L502.6236 352.6925 L503.519 351.380768 L504.500244 350.131927 L505.5629 348.9516 L506.70224 347.845123 L507.913116 346.8174 L509.1901 345.8731 L510.527466 345.016479 L511.91925 344.251282 L513.3591 343.5811 L514.8406 343.008759 L516.3571 342.537 L517.901855 342.167847 L519.4678 341.902954 L521.048 341.743561 L522.6353 341.690338 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="46" class="label">
          <tspan x="464" y="459">0.5 %</tspan>
        </text>
      </g>
      <g id="47" class="processContainer">
        <text font-size="9pt" fill="rgb(36,80,0)" id="48" class="label">
          <tspan x="296" y="179">Discharge</tspan>
          <tspan x="296" y="192.582031">Losses</tspan>
        </text>
      </g>
      <g id="49" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="244_0" class="flow" stroke="none" d="M359.5 266.5 L359.5 268 L325.2132 268 L323.49 267.932281 L321.777374 267.729584 L320.086 267.393158 L318.4262 266.925049 L316.808228 266.328156 L315.242126 265.60614 L313.737457 264.7635 L312.303558 263.8054 L310.949249 262.737762 L309.682861 261.567139 L308.512238 260.300751 L307.4446 258.946442 L306.4865 257.512543 L305.64386 256.007874 L304.921844 254.441757 L304.324951 252.8238 L303.856842 251.164 L303.520416 249.47261 L303.317719 247.76001 L303.25 246.0368 L303.25 216 L303.25 192.933014 L304 192.5 L304.75 192.933014 L304.75 216 L304.75 246.0368 L304.81308 247.642334 L305.001923 249.237961 L305.3154 250.813843 L305.751526 252.360275 L306.307648 253.867722 L306.980347 255.326889 L307.765442 256.7288 L308.6581 258.0648 L309.652863 259.326569 L310.74353 260.50647 L311.923431 261.597137 L313.1852 262.5919 L314.5212 263.484558 L315.9231 264.269653 L317.382263 264.942352 L318.8897 265.498474 L320.436157 265.9346 L322.012054 266.248077 L323.607666 266.43692 L325.2132 266.5 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="50" class="label">
          <tspan x="264" y="219.13414">2.0 %</tspan>
        </text>
      </g>
      <g id="51" class="processContainer">
        <text font-size="9pt" fill="rgb(36,80,0)" id="52" class="label">
          <tspan x="88" y="547">Aux.</tspan>
          <tspan x="88" y="560.582031">Consumers</tspan>
        </text>
      </g>
      <g id="53" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="251_0" class="flow" stroke="none" d="M208.169983 504.5 L212.579987 504.5 L212.579987 522.7868 L212.507782 524.624146 L212.291672 526.4502 L211.932938 528.2537 L211.4338 530.023438 L210.797379 531.748535 L210.027557 533.418457 L209.129074 535.022766 L208.107513 536.5517 L206.969116 537.995667 L205.720947 539.345947 L204.3707 540.5942 L202.926651 541.732544 L201.397766 542.7541 L199.793427 543.6526 L198.123535 544.4224 L196.398392 545.0589 L194.628632 545.558 L192.8252 545.9167 L190.999146 546.1328 L189.161774 546.205 L152 546.205 L137.773056 546.205 L136.5 544 L137.773056 541.795 L152 541.795 L189.161774 541.795 L190.653137 541.73645 L192.135315 541.561 L193.599152 541.2698 L195.035629 540.8647 L196.435913 540.3481 L197.791321 539.723267 L199.093536 538.993958 L200.334518 538.1648 L201.506622 537.2408 L202.6026 536.227661 L203.615723 535.131653 L204.539734 533.959534 L205.368942 532.718567 L206.0982 531.4164 L206.723068 530.0609 L207.239655 528.660645 L207.644791 527.2242 L207.935959 525.7604 L208.111389 524.2782 L208.169983 522.7868 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="54" class="label">
          <tspan x="88" y="579">6.0 %</tspan>
        </text>
      </g>
      <g id="55" class="processContainer">
        <text font-size="9pt" fill="rgb(36,80,0)" id="56" class="label">
          <tspan x="88" y="683">Losses</tspan>
          <tspan x="88" y="696.582031">Power Train</tspan>
        </text>
      </g>
      <g id="57" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="258_0" class="flow" stroke="none" d="M213.454987 616.5 L225.841858 616.5 L225.841858 650.7868 L225.757355 652.9371 L225.504425 655.074158 L225.08461 657.1848 L224.500473 659.2559 L223.755646 661.274841 L222.8547 663.2292 L221.8032 665.10675 L220.607651 666.896 L219.275375 668.585938 L217.814621 670.1662 L216.2344 671.627 L214.544434 672.9593 L212.755157 674.1548 L210.877563 675.2063 L208.923279 676.107239 L206.904312 676.8521 L204.83316 677.436157 L202.722565 677.856 L200.58551 678.108948 L198.435211 678.1934 L176.5 678.1934 L140.075775 678.1934 L136.5 672 L140.075775 665.8066 L176.5 665.8066 L198.435211 665.8066 L199.613647 665.7603 L200.784821 665.621643 L201.9415 665.3916 L203.076584 665.0715 L204.183044 664.663269 L205.254059 664.169556 L206.28302 663.593262 L207.263611 662.938049 L208.189789 662.207947 L209.0558 661.4074 L209.856339 660.5414 L210.586472 659.615234 L211.241684 658.6346 L211.817932 657.605652 L212.311676 656.5346 L212.719864 655.428162 L213.04 654.2931 L213.270081 653.1364 L213.408691 651.9653 L213.454987 650.7868 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="58" class="label">
          <tspan x="88" y="715">17.9 %</tspan>
        </text>
      </g>
      <g id="59" class="processContainer">
        <text font-size="9pt" fill="rgb(36,80,0)" id="60" class="label">
          <tspan x="104" y="787">Rolling</tspan>
          <tspan x="104" y="800.582031">Friction</tspan>
        </text>
      </g>
      <g id="61" class="processContainer">
        <text font-size="9pt" fill="rgb(36,80,0)" id="62" class="label">
          <tspan x="104" y="843">Air Drag</tspan>
        </text>
      </g>
      <g id="63" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="271_0" class="flow" stroke="none" d="M228.439178 744.5 L241.469543 744.5 L241.469543 778.7868 L241.384064 780.962341 L241.128159 783.1245 L240.703415 785.2599 L240.112411 787.355347 L239.358856 789.397949 L238.447327 791.375244 L237.3835 793.274841 L236.1739 795.085144 L234.825989 796.7949 L233.348083 798.393738 L231.749313 799.871643 L230.03949 801.219543 L228.2292 802.429138 L226.32959 803.493 L224.352356 804.4045 L222.3097 805.1581 L220.2142 805.749 L218.078827 806.1738 L215.916687 806.429749 L213.74115 806.5152 L200.5 806.5152 L164.261551 806.5152 L160.5 800 L164.261551 793.4848 L200.5 793.4848 L213.74115 793.4848 L214.894348 793.4395 L216.040436 793.303833 L217.172333 793.078735 L218.283081 792.7655 L219.365845 792.366 L220.41391 791.8829 L221.420853 791.3189 L222.380432 790.6778 L223.286758 789.9633 L224.134216 789.1799 L224.9176 788.3324 L225.6321 787.4261 L226.27327 786.4665 L226.837189 785.4596 L227.320343 784.4115 L227.7198 783.328735 L228.033066 782.218 L228.258224 781.08606 L228.39386 779.94 L228.439178 778.7868 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="64" class="label">
          <tspan x="104" y="819">23.0 %</tspan>
        </text>
      </g>
      <g id="65" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="272_0" class="flow" stroke="none" d="M241.469543 744.5 L257.33255 744.5 L257.33255 826.7868 L257.2427 829.0735 L256.973724 831.346069 L256.527283 833.5905 L255.9061 835.793 L255.114044 837.939941 L254.15596 840.01825 L253.037781 842.014832 L251.7664 843.9176 L250.34964 845.7147 L248.796249 847.3952 L247.115814 848.948669 L245.318665 850.3654 L243.415909 851.6367 L241.419266 852.754944 L239.341034 853.713 L237.194031 854.505066 L234.991516 855.1262 L232.747086 855.5727 L230.4745 855.8417 L228.187836 855.9315 L216 855.9315 L165.079254 855.9315 L160.5 848 L165.079254 840.0685 L216 840.0685 L228.187836 840.0685 L229.2299 840.0276 L230.265549 839.904968 L231.288391 839.701538 L232.292114 839.4185 L233.270538 839.0575 L234.2176 838.6209 L235.127518 838.1113 L235.994629 837.5319 L236.813629 836.8863 L237.579422 836.1784 L238.287323 835.4126 L238.932968 834.5936 L239.51236 833.7265 L240.021927 832.8166 L240.458527 831.8695 L240.819489 830.891052 L241.102585 829.8874 L241.30603 828.8645 L241.4286 827.828857 L241.469543 826.7868 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="66" class="label">
          <tspan x="104" y="867">28.0 %</tspan>
        </text>
      </g>
      <g id="67" class="processContainer">
        <text font-size="9pt" fill="rgb(36,80,0)" id="68" class="label">
          <tspan x="608" y="939">Rolling Friction</tspan>
        </text>
      </g>
      <g id="69" class="processContainer">
        <text font-size="9pt" fill="rgb(36,80,0)" id="70" class="label">
          <tspan x="704" y="939">Air Drag</tspan>
        </text>
      </g>
      <g id="71" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="285_0" class="flow" stroke="none" d="M528.5 881.8923 L528.5 879.39386 L626.7868 879.39386 L628.5492 879.4631 L630.3007 879.6704 L632.0306 880.014465 L633.7281 880.4933 L635.382751 881.1037 L636.984558 881.8421 L638.5234 882.7039 L639.989868 883.6838 L641.374939 884.775757 L642.6701 885.972961 L643.8673 887.2681 L644.9593 888.6532 L645.939148 890.1197 L646.800964 891.6585 L647.539368 893.2603 L648.1498 894.915 L648.6286 896.6125 L648.972656 898.342346 L649.18 900.0939 L649.2492 901.856262 L649.2492 904 L649.2492 918.778748 L648 919.5 L646.7508 918.778748 L646.7508 904 L646.7508 901.856262 L646.6893 900.2899 L646.505 898.7332 L646.199158 897.19574 L645.7737 895.6871 L645.23114 894.2164 L644.5749 892.7928 L643.8089 891.4251 L642.938049 890.1217 L641.9675 888.8907 L640.9035 887.739563 L639.7524 886.675537 L638.521362 885.705 L637.217957 884.834167 L635.8503 884.0682 L634.4267 883.4119 L632.956 882.8694 L631.4473 882.4439 L629.909851 882.138062 L628.353149 881.9538 L626.7868 881.8923 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="72" class="label">
          <tspan x="608" y="955">9.0 %</tspan>
        </text>
      </g>
      <g id="73" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="286_0" class="flow" stroke="none" d="M528.5 879.39386 L528.5 876.895447 L706.7868 876.895447 L708.5492 876.964661 L710.3007 877.172 L712.0306 877.516052 L713.7281 877.9949 L715.382751 878.6053 L716.984558 879.3437 L718.5234 880.2055 L719.989868 881.185364 L721.374939 882.277344 L722.6701 883.474548 L723.8673 884.7697 L724.9593 886.1548 L725.939148 887.6213 L726.800964 889.1601 L727.539368 890.7619 L728.1498 892.416565 L728.6286 894.1141 L728.972656 895.843933 L729.18 897.595459 L729.2492 899.357849 L729.2492 904 L729.2492 918.778748 L728 919.5 L726.7508 918.778748 L726.7508 904 L726.7508 899.357849 L726.6893 897.7915 L726.505 896.2348 L726.199158 894.6973 L725.7737 893.18866 L725.23114 891.717957 L724.5749 890.2944 L723.8089 888.9267 L722.938049 887.6233 L721.9675 886.3923 L720.9035 885.24115 L719.7524 884.1771 L718.521362 883.2066 L717.217957 882.335754 L715.8503 881.569763 L714.4267 880.9135 L712.956 880.371 L711.4473 879.9455 L709.909851 879.639648 L708.353149 879.4554 L706.7868 879.39386 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="74" class="label">
          <tspan x="704" y="955">9.0 %</tspan>
        </text>
      </g>
      <g id="75" class="processContainer">
        <text font-size="9pt" fill="rgb(36,80,0)" id="76" class="label">
          <tspan x="1160" y="667">Braking Losses</tspan>
        </text>
      </g>
      <g id="77" class="processContainer">
        <text font-size="9pt" fill="rgb(36,80,0)" id="78" class="label">
          <tspan x="1152" y="491">Losses</tspan>
          <tspan x="1152" y="504.582031">Power Train</tspan>
        </text>
      </g>
      <g id="79" class="processContainer">
        <text font-size="9pt" fill="rgb(36,80,0)" id="80" class="label">
          <tspan x="1152" y="347">Aux.</tspan>
          <tspan x="1152" y="360.582031">Consumers</tspan>
        </text>
      </g>
      <g id="81" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="305_0" class="flow" stroke="none" d="M1019.79614 687.5 L1018.65796 687.5 L1018.65796 677.2132 L1018.7251 675.50415 L1018.92615 673.805664 L1019.25983 672.1282 L1019.72406 670.4821 L1020.31604 668.877441 L1021.0321 667.3242 L1021.8678 665.8319 L1022.81805 664.409851 L1023.87683 663.06665 L1025.03784 661.8107 L1026.29382 660.6498 L1027.637 659.590942 L1029.05908 658.6407 L1030.55127 657.805 L1032.10461 657.0889 L1033.70911 656.496948 L1035.35535 656.0327 L1037.03284 655.699036 L1038.7312 655.498 L1040.44031 655.430847 L1111.5 655.4309 L1151.17139 655.4309 L1151.5 656 L1151.17139 656.5691 L1111.5 656.5691 L1040.44031 656.569031 L1038.82056 656.6326 L1037.21082 656.8232 L1035.621 657.1394 L1034.06091 657.579468 L1032.54016 658.140442 L1031.06812 658.819153 L1029.65381 659.611145 L1028.30591 660.5117 L1027.03308 661.515259 L1025.84277 662.61554 L1024.74231 663.8059 L1023.73883 665.0789 L1022.83826 666.426636 L1022.04626 667.840942 L1021.36755 669.313 L1020.80658 670.8338 L1020.36652 672.3939 L1020.05029 673.983765 L1019.85974 675.5935 L1019.79614 677.2132 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="82" class="label">
          <tspan x="1120" y="651">5.0 %</tspan>
        </text>
      </g>
      <g id="83" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="306_0" class="flow" stroke="none" d="M1018.40771 543.5 L1015.38013 543.5 L1015.38013 524.3762 L1015.44568 522.6208 L1015.642 520.875061 L1015.96808 519.1489 L1016.42194 517.451843 L1017.00122 515.793335 L1017.70251 514.182739 L1018.52203 512.6289 L1019.45514 511.140564 L1020.49677 509.725952 L1021.64093 508.393 L1022.88141 507.1491 L1024.21118 506.001221 L1025.62292 504.95575 L1027.10876 504.018463 L1028.66016 503.194672 L1030.26892 502.4889 L1031.92578 501.90506 L1033.62158 501.4465 L1035.3468 501.1157 L1037.092 500.91452 L1118.72522 494.5806 L1118.8468 494.5714 L1118.96826 494.562683 L1119.09 494.5544 L1119.21167 494.546661 L1119.33337 494.539337 L1119.45508 494.5325 L1119.5769 494.526123 L1119.69873 494.5202 L1119.82043 494.5148 L1119.94226 494.509857 L1120.06421 494.505371 L1120.186 494.501343 L1120.30786 494.4978 L1120.42981 494.494751 L1120.55164 494.492157 L1120.67358 494.490021 L1120.79553 494.488373 L1120.91748 494.487183 L1121.03931 494.486481 L1121.16125 494.486237 L1142.626 494.486237 L1143.5 496 L1142.626 497.513763 L1121.16125 497.513763 L1121.051 497.514 L1120.94092 497.514648 L1120.83069 497.515717 L1120.72046 497.517181 L1120.61023 497.519135 L1120.50012 497.521484 L1120.38989 497.524231 L1120.27979 497.527466 L1120.16968 497.531067 L1120.05945 497.535126 L1119.94934 497.539581 L1119.83936 497.5445 L1119.72925 497.5498 L1119.61914 497.555573 L1119.50916 497.5618 L1119.39917 497.5684 L1119.28918 497.5754 L1119.1792 497.5829 L1119.06921 497.590759 L1118.95935 497.5991 L1037.32617 503.933 L1035.80554 504.1083 L1034.30225 504.3965 L1032.82471 504.7961 L1031.381 505.3048 L1029.97925 505.919769 L1028.62732 506.6376 L1027.33264 507.454285 L1026.10254 508.365234 L1024.94385 509.365479 L1023.863 510.449341 L1022.866 511.610779 L1021.95844 512.8434 L1021.14532 514.140259 L1020.43127 515.494141 L1019.82019 516.8976 L1019.31549 518.3427 L1018.92 519.8214 L1018.63593 521.3255 L1018.46484 522.8466 L1018.40771 524.3762 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="84" class="label">
          <tspan x="1095.92151" y="490.998016">14.0 %</tspan>
        </text>
      </g>
      <g id="85" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="307_0" class="flow" stroke="none" d="M1014.71387 407.5 L1013.97 407.5 L1013.97 373.2132 L1014.0365 371.519653 L1014.23572 369.836517 L1014.56635 368.174225 L1015.02643 366.543 L1015.61304 364.9529 L1016.32263 363.413727 L1017.15076 361.934967 L1018.09241 360.525726 L1019.14166 359.1947 L1020.29211 357.950165 L1021.53668 356.799683 L1022.86774 355.750366 L1024.277 354.808777 L1025.75574 353.980621 L1027.29492 353.2711 L1028.88489 352.684418 L1030.51624 352.2244 L1032.17847 351.893738 L1033.86157 351.694519 L1035.55518 351.628 L1112 351.628052 L1135.28528 351.628052 L1135.5 352 L1135.28528 352.371948 L1112 352.371948 L1035.55518 352.3719 L1033.91992 352.436157 L1032.29492 352.628479 L1030.68982 352.947723 L1029.11487 353.391937 L1027.57959 353.958344 L1026.09338 354.643463 L1024.66565 355.443054 L1023.305 356.352234 L1022.01984 357.365356 L1020.81812 358.476166 L1019.70734 359.677856 L1018.69421 360.962982 L1017.78503 362.323639 L1016.98547 363.751434 L1016.30029 365.237579 L1015.73395 366.772858 L1015.28973 368.34787 L1014.97046 369.9529 L1014.77808 371.578 L1014.71387 373.2132 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="86" class="label">
          <tspan x="1087.72766" y="347">4.0 %</tspan>
        </text>
      </g>
      <text font-size="9pt" fill="rgb(255,255,255)" id="87" class="label">
        <tspan x="608" y="347">Recuperation</tspan>
      </text>
      <text font-size="18pt" font-weight="bold" fill="rgb(0,0,0)" id="88" class="label">
        <tspan x="104" y="102">Electric Vehicle Energy Cycle</tspan>
      </text>
      <text font-size="8.25pt" fill="rgb(0,0,0)" id="89" class="label">
        <tspan x="104" y="122">using fictitious values, Live Link to Excel to feed values, custom</tspan>
        <tspan x="104" y="134.4502">flow content label with percentage (in relation to source node)</tspan>
        <tspan x="104" y="146.900391">Diagram provided by Phineas / sankey-diagrams.com</tspan>
      </text>
    </g>
    <g id="SvgToolTip" display="none" opacity="0">
      <filter id="boxShadow" width="150%" height="150%">
        <feGaussianBlur in="SourceAlpha" stdDeviation="3" result="blurEffect" />
        <feOffset dx="2" dy="4" in="blurEffect" result="movedBlurEffect" />
        <feMerge>
          <feMergeNode in="movedBlurEffect" />
          <feMergeNode in="SourceGraphic" />
        </feMerge>
      </filter>
      <rect id="SvgToolTipBackground" width="0" height="0" rx="5" ry="5" style="filter: url(#boxShadow);fill: rgb(238, 238, 238); opacity: 0.8; stroke: rgb(33, 33, 33);" />
      <g id="SvgToolTipText" />
    </g>
    <g id="SvgSupplementContent">
      <foreignObject id="SvgSupplementHtmlContainer" width="100%" height="100%" x="87" y="79" style="display: none;">
        <!-- The Modal -->
<body id="SvgSupplementTextWrapper" xmlns="http://www.w3.org/1999/xhtml">
  <!-- Modal content -->
  <div class="modal-content">
    <span class="close">×</span>
    <div id="SvgSupplementTextContainer">
	<!-- 
	JavaScript writes supplement texts in here by referencing the id. Do not change it 
	-->
	</div>
  </div>
</body>

<style xmlns="http://www.w3.org/2000/svg">
#SvgSupplementTextWrapper {
  margin: 0;
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgb(0,0,0);
  background-color: rgba(0,0,0,0.4);
}

#SvgSupplementTextWrapper .modal-content {
  background-color: #fefefe;
  margin: 5% auto;
  padding: 32px;
  border: 1px solid #888;
  width: 80%;
}

#SvgSupplementTextWrapper .close {
  color: #aaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

#SvgSupplementTextWrapper .close:hover,
#SvgSupplementTextWrapper .close:focus {
  color: black;
  text-decoration: none;
  cursor: pointer;
}body {
    font-family: Verdana;
    font-size: 11px;
    color: #555555;
    letter-spacing: .25px;
}
h1 {
    font-size: 16px;
    font-weight: normal;
    color: #4477bb;
    margin: 12px 0 8px;
    padding-top: 8px;
    letter-spacing: 1.4px;
    border-bottom: solid 1px #4477BB;
}
h2 {
    font-size: 13px;
    font-weight: normal;
    letter-spacing: 0.6px;
    text-decoration: none;
    color: #4477bb;
    border-bottom: solid 1px #dddddd;
    margin: 8px 0 8px;
    padding-top: 8px;
}
h3 {
    font-size: 11px;
    font-weight: normal;
    letter-spacing: 0.6px;
    text-decoration: none;
    color: #4477bb;
    margin: 8px 0 8px;
    padding-top: 8px;
}
div, p, blockquote {
    margin: 0 0 8px;
    line-height: 1.2;
}
ol, ul {
    margin-top: 0px;
    margin-bottom: 12px;
}
a {
    color: #4477BB;
    font-style: normal;
}
blockquote, pre,code {
    color: #444444;
    background-color: #eeeeee;
}
blockquote {
    font-style: italic;
    border-left: 8px solid #4477bb;
    margin-left: 16px;
    margin-right: 32px;
    padding: 8px 8px 2px 8px;
    letter-spacing: 1px;
    line-height: 1.5;
}
pre {
    font-family: Menlo, Monaco, Consolas, monospace;
    padding: 2px 2px 2px 2px;
    line-height: 1.25;
    overflow-x: scroll;
}
</style></foreignObject>
    </g>
  </g>
  <script>var Svg_activeScripts = ["Core","ToolTips","Supplements","ZoomAndMove","Highlighting"];
var Svg_tooltips = {"":[{"title":"Battery"},{"caption":"Balance (Energy)"},{"section":{"text":"Input","quantity":"100","unit":"kWh"}},{"flow":{"entry":"Energy","quantity":"76","unit":"kWh","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"24","unit":"kWh","color":"rgba(79,176,90,1)"}},{"section":{"text":"Output","quantity":"100","unit":"kWh"}},{"flow":{"entry":"Energy","quantity":"1","unit":"kWh","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"99","unit":"kWh","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"1","unit":"kWh","color":"rgba(79,176,90,1)"}}],"2":[{"title":"Battery"},{"caption":"Balance (Energy)"},{"section":{"text":"Input","quantity":"99","unit":"kWh"}},{"flow":{"entry":"Energy","quantity":"99","unit":"kWh","color":"rgba(79,176,90,1)"}},{"section":{"text":"Output","quantity":"99","unit":"kWh"}},{"flow":{"entry":"Energy","quantity":"97","unit":"kWh","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"2","unit":"kWh","color":"rgba(79,176,90,1)"}}],"4":[{"title":"Electr. Energy"},{"caption":"Balance (Energy)"},{"section":{"text":"Input","quantity":"97","unit":"kWh"}},{"flow":{"entry":"Energy","quantity":"97","unit":"kWh","color":"rgba(79,176,90,1)"}},{"section":{"text":"Output","quantity":"97","unit":"kWh"}},{"flow":{"entry":"Energy","quantity":"91","unit":"kWh","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"6","unit":"kWh","color":"rgba(79,176,90,1)"}}],"6":[{"title":"Power Train"},{"caption":"Balance (Energy)"},{"section":{"text":"Input","quantity":"91","unit":"kWh"}},{"flow":{"entry":"Energy","quantity":"91","unit":"kWh","color":"rgba(79,176,90,1)"}},{"section":{"text":"Output","quantity":"91","unit":"kWh"}},{"flow":{"entry":"Energy","quantity":"16","unit":"kWh","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"74","unit":"kWh","color":"rgba(79,176,90,1)"}}],"8":[{"title":"Wheel"},{"caption":"Balance (Energy)"},{"section":{"text":"Input","quantity":"74","unit":"kWh"}},{"flow":{"entry":"Energy","quantity":"74","unit":"kWh","color":"rgba(79,176,90,1)"}},{"section":{"text":"Output","quantity":"74","unit":"kWh"}},{"flow":{"entry":"Energy","quantity":"21","unit":"kWh","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"17","unit":"kWh","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"37","unit":"kWh","color":"rgba(79,176,90,1)"}}],"11":[{"title":"Electric"},{"caption":"Balance (Energy)"},{"section":{"text":"Input","quantity":"24","unit":"kWh"}},{"flow":{"entry":"Energy","quantity":"24","unit":"kWh","color":"rgba(79,176,90,1)"}},{"section":{"text":"Output","quantity":"24","unit":"kWh"}},{"flow":{"entry":"Energy","quantity":"24","unit":"kWh","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"1","unit":"kWh","color":"rgba(79,176,90,1)"}}],"13":[{"flow":{"entry":"Energy","quantity":"76","unit":"kWh","color":"rgba(79,176,90,1)"}}],"15":[{"flow":{"entry":"Energy","quantity":"99","unit":"kWh","color":"rgba(79,176,90,1)"}}],"17":[{"flow":{"entry":"Energy","quantity":"97","unit":"kWh","color":"rgba(79,176,90,1)"}}],"19":[{"flow":{"entry":"Energy","quantity":"91","unit":"kWh","color":"rgba(79,176,90,1)"}}],"21":[{"flow":{"entry":"Energy","quantity":"74","unit":"kWh","color":"rgba(79,176,90,1)"}}],"23":[{"title":"Kinetic"},{"caption":"Balance (Energy)"},{"section":{"text":"Input","quantity":"37","unit":"kWh"}},{"flow":{"entry":"Energy","quantity":"37","unit":"kWh","color":"rgba(79,176,90,1)"}},{"section":{"text":"Output","quantity":"37","unit":"kWh"}},{"flow":{"entry":"Energy","quantity":"3","unit":"kWh","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"3","unit":"kWh","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"30","unit":"kWh","color":"rgba(79,176,90,1)"}}],"25":[{"flow":{"entry":"Energy","quantity":"37","unit":"kWh","color":"rgba(79,176,90,1)"}}],"27":[{"title":"Wheel"},{"caption":"Balance (Energy)"},{"section":{"text":"Input","quantity":"30","unit":"kWh"}},{"flow":{"entry":"Energy","quantity":"30","unit":"kWh","color":"rgba(79,176,90,1)"}},{"section":{"text":"Output","quantity":"30","unit":"kWh"}},{"flow":{"entry":"Energy","quantity":"28","unit":"kWh","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"1","unit":"kWh","color":"rgba(79,176,90,1)"}}],"29":[{"title":"Power"},{"caption":"Balance (Energy)"},{"section":{"text":"Input","quantity":"28","unit":"kWh"}},{"flow":{"entry":"Energy","quantity":"28","unit":"kWh","color":"rgba(79,176,90,1)"}},{"section":{"text":"Output","quantity":"28","unit":"kWh"}},{"flow":{"entry":"Energy","quantity":"24","unit":"kWh","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"4","unit":"kWh","color":"rgba(79,176,90,1)"}}],"31":[{"flow":{"entry":"Energy","quantity":"30","unit":"kWh","color":"rgba(79,176,90,1)"}}],"33":[{"flow":{"entry":"Energy","quantity":"28","unit":"kWh","color":"rgba(79,176,90,1)"}}],"35":[{"flow":{"entry":"Energy","quantity":"24","unit":"kWh","color":"rgba(79,176,90,1)"}}],"37":[{"flow":{"entry":"Energy","quantity":"24","unit":"kWh","color":"rgba(79,176,90,1)"}}],"41":[{"flow":{"entry":"Energy","quantity":"1","unit":"kWh","color":"rgba(79,176,90,1)"}}],"45":[{"flow":{"entry":"Energy","quantity":"1","unit":"kWh","color":"rgba(79,176,90,1)"}}],"49":[{"flow":{"entry":"Energy","quantity":"2","unit":"kWh","color":"rgba(79,176,90,1)"}}],"53":[{"flow":{"entry":"Energy","quantity":"6","unit":"kWh","color":"rgba(79,176,90,1)"}}],"57":[{"flow":{"entry":"Energy","quantity":"16","unit":"kWh","color":"rgba(79,176,90,1)"}}],"63":[{"flow":{"entry":"Energy","quantity":"17","unit":"kWh","color":"rgba(79,176,90,1)"}}],"65":[{"flow":{"entry":"Energy","quantity":"21","unit":"kWh","color":"rgba(79,176,90,1)"}}],"71":[{"flow":{"entry":"Energy","quantity":"3","unit":"kWh","color":"rgba(79,176,90,1)"}}],"73":[{"flow":{"entry":"Energy","quantity":"3","unit":"kWh","color":"rgba(79,176,90,1)"}}],"81":[{"flow":{"entry":"Energy","quantity":"1","unit":"kWh","color":"rgba(79,176,90,1)"}}],"83":[{"flow":{"entry":"Energy","quantity":"4","unit":"kWh","color":"rgba(79,176,90,1)"}}],"85":[{"flow":{"entry":"Energy","quantity":"1","unit":"kWh","color":"rgba(79,176,90,1)"}}]};
var Svg_highlighting = {"entries":{"Energy":["196_0","197_0","198_0","199_0","200_0","207_0","220_0","221_0","222_0","223_0","230_0","237_0","244_0","251_0","258_0","271_0","272_0","285_0","286_0","305_0","306_0","307_0"]},"connections":{"":{"in":["13","37"],"out":["41","15","45"]},"2":{"in":["15"],"out":["17","49"]},"4":{"in":["17"],"out":["19","53"]},"6":{"in":["19"],"out":["57","21"]},"8":{"in":["21"],"out":["65","63","25"]},"10":{"in":[],"out":["13"]},"11":{"in":["35"],"out":["37","85"]},"23":{"in":["25"],"out":["71","73","31"]},"27":{"in":["31"],"out":["33","81"]},"29":{"in":["33"],"out":["35","83"]},"39":{"in":["41"],"out":[]},"43":{"in":["45"],"out":[]},"47":{"in":["49"],"out":[]},"51":{"in":["53"],"out":[]},"55":{"in":["57"],"out":[]},"59":{"in":["63"],"out":[]},"61":{"in":["65"],"out":[]},"67":{"in":["71"],"out":[]},"69":{"in":["73"],"out":[]},"75":{"in":["81"],"out":[]},"77":{"in":["83"],"out":[]},"79":{"in":["85"],"out":[]}}};
var Svg_supplements = {};
</script>
  <script>// Core

window.addEventListener("onload", Svg_Initialize());

function Svg_Initialize() {
  if (document.readyState !== "complete") {
    setTimeout(function () {
      Svg_Initialize();
    }, 200);
  } else {
    SvgCore.SvgSankey.el = document.getElementById("SvgSankey");
    if (SvgCore.SvgSankey.el) {
      Svg_activeScripts.forEach(function (activeScript) {
        var initFunc = "Svg" + activeScript + "_Initialize"
        if (typeof window[initFunc] === "function") {
          window[initFunc]()
        }
      });
    }
  }
}

var SvgCore = {
  SvgSankey: {el: null},
  SvgWrapper: {
    el: null,
    bbox: null,
    boundingClientRect: null,
    viewBox: null
  },
  SvgContainer: {
    el: null,
    bbox: null,
    boundingClientRect: null,
    viewBox: null
  },
  toolTip: null,
  toolTipTimer: null,
  toolTipLastTarget: null,
  ttBoxSpaceToBorder: 5,
  ttBoxPadding: 5,
  ttTextSpaceBottom: 5,
  ttTextSpaceRight: 15,
  ttTextSpaceLeftOnRightAlign: 3,
  ttTextIcon: "\u25A0",
  colors: {
    warning: "#C00020",
    info: "#808080"
  },
  blurRect: null,
  scale: {}
}

function SvgCore_initViewBoxAndBounds() {
  SvgCore.SvgWrapper.el = document.getElementsByTagName("svg")[0]
  SvgCore.SvgWrapper.bbox = SvgCore.SvgWrapper.el.getBBox()
  SvgCore.SvgWrapper.boundingClientRect = SvgCore.SvgWrapper.el.getBoundingClientRect()
  SvgCore.SvgWrapper.viewBox = SvgCore.SvgWrapper.el.viewBox &amp;&amp; SvgCore.SvgWrapper.el.viewBox.baseVal
  SvgCore.SvgContainer.el = document.getElementById("SvgObjects")
  SvgCore.SvgContainer.bbox = SvgCore.SvgContainer.el.getBBox()
  SvgCore.SvgContainer.boundingClientRect = SvgCore.SvgContainer.el.getBoundingClientRect()
  SvgCore.SvgContainer.viewBox = SvgCore.SvgContainer.el.viewBox &amp;&amp; SvgCore.SvgContainer.el.viewBox.baseVal
  SvgCore.blurRect = document.getElementById("ttBlurFilter")
  SvgCore.scale = {
    width: SvgCore.SvgWrapper.el.getScreenCTM().a,
    height: SvgCore.SvgWrapper.el.getScreenCTM().d
  };
}

function SvgCore_Initialize() {
  SvgCore_Polyfill.forEach(function(polyfillFunc){polyfillFunc()})
  SvgCore_initViewBoxAndBounds()

  window.addEventListener('resize', function () {
    SvgCore_initViewBoxAndBounds()
  })
}

function SvgCore_getMouseCoords(absX, absY, target) {
  var pnt1 = SvgCore.SvgWrapper.el.createSVGPoint();
  pnt1.x = absX; pnt1.y = absY;
  var svgCTM = SvgCore.SvgContainer.el.getCTM();
  var pnt2 = pnt1.matrixTransform(svgCTM.inverse());
  return pnt2;
}

var SvgCore_Polyfill = [
  function(){
    var property = "classList"
    if (!Object.getOwnPropertyDescriptor(Element.prototype, property)) {
      console.log("SvgInfo: Adding Polyfill for Element."+property)
      if (HTMLElement &amp;&amp; Object.getOwnPropertyDescriptor(HTMLElement.prototype, property)) {
        Object.defineProperty(Element.prototype, property, Object.getOwnPropertyDescriptor(HTMLElement.prototype, property));
      }
    }},
  function(){
    var method = "getElementsByClassName"
    if (Element.prototype[method] === undefined) {
      console.log("SvgInfo: Adding Polyfill for Element.getElementsByClassName")
      Element.prototype[method] = HTMLElement.prototype[method];
    }},
  function(){
    var property = "contains"
    if (!Object.getOwnPropertyDescriptor(Element.prototype, property)) {
      if (HTMLElement &amp;&amp; Object.getOwnPropertyDescriptor(HTMLElement.prototype, property)) {
        console.log("SvgInfo: Adding Polyfill for Element."+property)
        Object.defineProperty(Element.prototype, property, Object.getOwnPropertyDescriptor(HTMLElement.prototype, property));
      }
    }
  },
];

function SvgCore_CollectionToArray(collection){
  var arr = [];
  if (!collection || !collection.length) return arr
  for (var indx = 0; indx &lt; collection.length; indx++){
    arr.push(collection[indx])
  }
  return arr
}

function SvgCore_getFirstRelevantElement(x, classes) {
  if (classes &amp;&amp; !Array.isArray(classes)) {
    classes = [classes];
  }
  if (x.nodeType !== 1 || classes.length &lt; 1) return;

  var elementInfo = {
    type: null,
    object: null
  };
  var whileContinue = true;
  while (whileContinue) {
    classes.forEach(function (classToCheck) {
      if (x.classList &amp;&amp; x.classList.contains(classToCheck)) {
        elementInfo.type = classToCheck;
        return true;
      }
      return false;
    });
    whileContinue = elementInfo.type ? false : x ? true : false;
    x = whileContinue ? x.parentNode : x;
  }
  elementInfo.object = elementInfo.type != null ? x : null;
  return elementInfo.object;
}

function SvgCore_findAll(node, selector) {
  removeId = false

  if (node.getAttribute('id') === null) {
      node.setAttribute('id', 'ID_' + new Date().getTime())
      removeId = true
  }
  let result = document.querySelectorAll('#' + node.getAttribute('id') + ' &gt; ' + selector)
  if (removeId)
      node.removeAttribute('id')
  return result
}
// ToolTips

function SvgToolTips_Initialize() {
  console.log("Initializing SvgToolTips")
  SvgTT_initMarkers()
  SvgTT_initListeners()
}
var SvgTT_dataBlock = Svg_tooltips;
function SvgTT_initMarkers() {
  document.getElementById("SvgSankey").style.filter = "url(#ttBlur)";
}

function SvgTT_initListeners() {
  var interactables = [].concat(
    SvgCore_CollectionToArray(SvgCore.SvgSankey.el.getElementsByClassName("flow")).filter(function(el) {
      return SvgTT_toolTipExists(SvgCore_getFirstRelevantElement(el, "arrowContainer"))
    }),
    SvgCore_CollectionToArray(SvgCore.SvgSankey.el.getElementsByClassName("processContainer")).filter(SvgTT_toolTipExists)
  )
  interactables.forEach(function (el) {
    el.addEventListener("mouseenter", SvgTT_SvgMouseEnter, false);
    el.addEventListener("mouseleave", SvgTT_SvgMouseLeave, false);
  })
  function SvgTT_toolTipExists(element) {
    return SvgTT_dataBlock[element.id] &amp;&amp; true
  }
}

function SvgTT_SvgMouseEnter(e) {
  SvgTT_showTT(e);
}

function SvgTT_SvgMouseLeave(e) {
  if ((SvgCore.toolTipLastTarget &amp;&amp; SvgCore.toolTipLastTarget.contains(e.toElement)) || (SvgCore.toolTip &amp;&amp; (e.toElement === SvgCore.toolTip || SvgCore.toolTip.contains(e.toElement)))) {
    SvgCore.toolTip.addEventListener("mouseleave", SvgTT_SvgMouseLeave, false);
    return;
  }
  SvgTT_TTHide(e);
}

function SvgTT_cleanTT(ttContainer) {
  while (ttContainer.firstChild) {
    ttContainer.removeChild(ttContainer.firstChild);
  }
}

function SvgTT_showTT(e) {
  var posiX = 0;
  var posiY = 0;
  SvgCore.toolTip = document.getElementById("SvgToolTip");
  if (SvgCore.toolTip !== null) {
    SvgCore.toolTip.setAttribute("display", "inherit");
    var ttBackground = document.getElementById("SvgToolTipBackground");
    var ttText = document.getElementById("SvgToolTipText");
    SvgTT_cleanTT(ttText)
    SvgTT_buildTT(ttText, e.currentTarget);
    if ((ttText !== null) &amp;&amp; (SvgCore.toolTipLastTarget !== e.currentTarget)) {
      var scale =  SvgCore.scale 
      scale = Math.min(scale.width, scale.height);
      var ttTextBBox = ttText.getBBox()
      var boxPadding = 5;
      var ttWidth = ttTextBBox.width + 2 * boxPadding;
      var ttHeight = ttTextBBox.height + 2 * boxPadding;
      ttBackground.setAttribute("x", ttTextBBox.x - boxPadding || 0);
      ttBackground.setAttribute("y", ttTextBBox.y - boxPadding || 0);
      ttBackground.setAttribute("width", ttWidth || 1);
      ttBackground.setAttribute("height", ttHeight || 1);
      var textSizeAndPaddingX = (boxPadding - ttTextBBox.x)
      var textSizeAndPaddingY = (boxPadding - ttTextBBox.y)
      
      var posiToMoveTo = SvgCore_getMouseCoords(e.pageX, e.pageY, e.currentTarget);
      posiX = posiToMoveTo.x + textSizeAndPaddingX || 0;
      posiY = posiToMoveTo.y + textSizeAndPaddingY || 0;

      var rightBorder = SvgCore.SvgContainer.bbox.width + SvgCore.SvgContainer.bbox.x
      var remainingTTWidthToShow = ttWidth - boxPadding + ttTextBBox.x
      var effectiveNeededWidth = remainingTTWidthToShow  + posiX + SvgCore.ttBoxSpaceToBorder
      if (effectiveNeededWidth &gt; rightBorder) {
        posiX = posiX - (effectiveNeededWidth - rightBorder);
      }
      var bottomBorder = SvgCore.SvgContainer.bbox.height + SvgCore.SvgContainer.bbox.y
      var remainingTTHeightToShow = ttHeight - boxPadding + ttTextBBox.y
      var effectiveNeededHeight = remainingTTHeightToShow  + posiY + SvgCore.ttBoxSpaceToBorder
      if (effectiveNeededHeight &gt; bottomBorder) {
        posiY = posiY - (effectiveNeededHeight - bottomBorder)
      }
      SvgCore.toolTip.setAttribute("transform", "translate(" + (posiX) + ", " + (posiY) + ") scale(" + 1 + " " + 1 + ")");
      SvgCore.toolTipLastTarget = e.currentTarget;
      if (SvgCore.blurRect) {
        var blurRect = SvgCore.blurRect;
        var blurPosi = {
          x: posiX - textSizeAndPaddingX,
          y: posiY - textSizeAndPaddingY
        }
        var blurSize = {
          x: ttWidth ,
          y: ttHeight 
        }
    }
    var delay = 400;
    if (SvgCore.blurRect){
      SvgCore.toolTipBlurTimer = setTimeout(function() {
      blurRect.setAttribute("x",blurPosi.x)
      blurRect.setAttribute("y",blurPosi.y)
      blurRect.setAttribute("width",blurSize.x || 1)
      blurRect.setAttribute("height",blurSize.y || 1)
        }, delay + 100)
    }
      SvgCore.toolTipTimer = setTimeout(function() {
        ttBackground.style.opacity = 0.8;
        SvgCore.toolTip.style.transition = "opacity 1s linear"
        SvgCore.toolTip.style.opacity = 1;
        SvgTT_TTTimeout()
      }, delay + 50);
    }
  }
}

function SvgTT_TTTimeout() {
  var tt = SvgCore.toolTip;
  if (tt) {
    tt.setAttribute("display", "inherit");
  }
}

function SvgTT_TTHide() {
  if (SvgCore.toolTipBlurTimer !== null) clearTimeout(SvgCore.toolTipBlurTimer);
  if (SvgCore.toolTipTimer !== null) clearTimeout(SvgCore.toolTipTimer);
  SvgCore.toolTipLastTarget = null;
  var tt = SvgCore.toolTip;
  if (tt) {
    var ttBackground = document.getElementById("SvgToolTipBackground");
    tt.style.transition = "opacity 0.1s linear"
    ttBackground.style.opacity = 1;
    tt.style.opacity = 0;
    tt.setAttribute("display", "none");
    if (SvgCore.blurRect) {
        SvgCore.blurRect.setAttribute("x", 0)
        SvgCore.blurRect.setAttribute("y", 0)
        SvgCore.blurRect.setAttribute("width", 1 )
        SvgCore.blurRect.setAttribute("height", 1)
      }
  }
}

function SvgTT_buildTT(textContainer, elementToAnalyzeInput) {
  var container = textContainer;
  var elementToAnalyze = elementToAnalyzeInput;
  var elementWriter = SvgTT_SvgElementWriter;

  var methods = {
    addDataAsElements: function (element) {
      if (element.nodeType !== 1) return;
      var parentElement = element;
      var currentElement = element;
      var nodesLeft = true;
      while (nodesLeft) {
        var functionToCall = methods.choseFittingFunction(currentElement);
        if (functionToCall !== null &amp;&amp; typeof methods[functionToCall] === "function") {
          methods[functionToCall](currentElement);
        }
        currentElement = methods.getNextSiblingOrChild(parentElement, currentElement);
        nodesLeft = !!currentElement;
      }
    },
    choseFittingFunction: function (element) {
      if (element.nodeType === 1 &amp;&amp; element.classList.contains("processContainer")) return "process";
      if (element.nodeType === 1 &amp;&amp; element.classList.contains("flow")) return "arrow";
      if (element.nodeType === 1 &amp;&amp; element.classList.contains("flow")) return "flow";
      return null;
    },
    getNextSiblingOrChild: function (parentElement, currentElement) {
      var parentOrSibling = currentElement;
      if (!parentOrSibling.nextSibling) return null;
      return parentOrSibling.nextSibling.parentNode === parentElement ? currentElement.nextSibling : currentElement.firstChild;
    },
    writeAndAppendToolTipEntry: function (toolTipEntry) {
      var toolTipType = Object.keys(toolTipEntry)[0];
      if (toolTipType !== null &amp;&amp; typeof elementWriter[toolTipType] === "function") {
        var elementToAppend = elementWriter[toolTipType](toolTipEntry);
        container.appendChild(elementToAppend);
      }
    },
    arrow: function(flowElement){
      var arrowContainer = SvgCore_getFirstRelevantElement(flowElement, "arrowContainer")
      var ownId = 0;
      SvgCore_CollectionToArray(arrowContainer.getElementsByClassName("flow")).forEach(function(flowInArrow, index){
        if (flowInArrow == flowElement) ownId = index;
      })
      var toolTipEntries = SvgTT_dataBlock[arrowContainer.id]
      toolTipEntries.forEach(function (flowData, index){
        flowData.flow.textColor = index != ownId ? "#606060" : null;
        methods.writeAndAppendToolTipEntry(flowData);
      })
    },
    process: function (processElement) {
      var toolTipEntries = SvgTT_dataBlock[processElement.id];
      toolTipEntries.forEach(function (ttEntry) {
        methods.writeAndAppendToolTipEntry(ttEntry);
      });
    },
    applyOffsets: function (offsets, domObjToLayout) {
      domObjToLayout = domObjToLayout || container;
      var toolTipRows = SvgCore_CollectionToArray(domObjToLayout.childNodes)
      toolTipRows.forEach(function (row, rowIndex) {
        var rowElements = SvgCore_CollectionToArray(row.childNodes)
        var rowHeight = row.getBBox().height;
        var dist = Math.round(rowHeight / 3);
        rowElements.forEach(function (elementToMove, columnIndex) {
          if (elementToMove.hasAttribute("text-anchor") &amp;&amp; elementToMove.getAttribute("text-anchor") === "end") {
            elementToMove.setAttribute("x", offsets.x[rowIndex][columnIndex + 1] - dist);
          } else {
            var colIndex;
            if (elementToMove.hasAttribute("column-index")) {
              colIndex = elementToMove.getAttribute("data-offsetx");
              if (colIndex &lt; 0 &amp;&amp; colIndex &gt;= rowElements.lenght()) {
                colIndex = columnIndex;
              }
            } else {
              colIndex = columnIndex;
            }
            elementToMove.setAttribute("x", offsets.x[rowIndex][colIndex]);
          }
          elementToMove.setAttribute("y", offsets.y[rowIndex]);
        });
      });
    },

    getOffsets: function (domObjToLayout) {
      domObjToLayout = domObjToLayout || container;
      var paddingBottom = SvgCore.ttTextSpaceBottom;
      var elementsToGrid = [".flow", ".section", ".stock"];
      var gridIdentificationClass = "grid";

      var gridElements = []
      elementsToGrid.forEach(function (identifier) {
        gridElements = gridElements.concat(SvgCore_CollectionToArray(domObjToLayout.querySelectorAll(identifier)))
      })
      var gridWidths = [];
      gridElements.forEach(function (row) {
        row.classList.add(gridIdentificationClass);
        var rowElements = SvgCore_CollectionToArray(row.childNodes)
        rowElements.forEach(function (element, columnIndex) {
          gridWidths[columnIndex] = Math.max(gridWidths[columnIndex] || 0, element.getComputedTextLength());
        });
      });
      var nodesArr = SvgCore_CollectionToArray(domObjToLayout.childNodes);
      var offsetsY = [0];
      var offsetsX = [];
      nodesArr.forEach(function (row, rowIndex) {
        var rowHeight = row.getBBox().height;
        var dist = Math.round(rowHeight / 3);
        offsetsY[rowIndex + 1] = rowHeight + (offsetsY[rowIndex] || 0) + (rowIndex &gt; 0 ? paddingBottom : 0);
        var rowElements = SvgCore_CollectionToArray(row.childNodes)
        rowElements.forEach(function (element, columnIndex) {
          if (!offsetsX[rowIndex]) offsetsX.push([0]);
          var elWidth = row.classList.contains(gridIdentificationClass) ? gridWidths[columnIndex] : element.getComputedTextLength();
          offsetsX[rowIndex][columnIndex + 1] = elWidth + offsetsX[rowIndex][columnIndex] + dist;
        });
      });
      gridElements.forEach(function (el) {
        el.classList.remove(gridIdentificationClass)
      })
      offsetsY.shift() /* Removes the 0 so the first element gets y-shifted by its' own height. Needed for SVG-Text-Elements to achieve a decent 0/0 point*/
      return {
        y: offsetsY,
        x: offsetsX
      };
    }
  };
  methods.addDataAsElements(elementToAnalyze);
  var offsets = methods.getOffsets();
  methods.applyOffsets(offsets);
}

var SvgTT_SvgElementWriter = {
  createSvgElement: function (type, textcontent, classToAdd) {
    var element = document.createElementNS("http://www.w3.org/2000/svg", type);
    element.setAttribute("x", "0");
    element.setAttribute("y", "0");
    if (textcontent) element.textContent = textcontent;
    if (classToAdd) element.classList.add(classToAdd);
    return element;
  },

  title: function (inputObj) {
    var titleName = inputObj.title;
    var childElement = this.createSvgElement("text", "", Object.keys(inputObj)[0]);
    var titleTspan = this.createSvgElement("tspan", titleName);
    childElement.appendChild(titleTspan);
    titleTspan.classList.add("text");
    return childElement;
  },

  caption: function (inputObj) {
    var captionText = inputObj.caption;
    var childElement = this.createSvgElement("text", "", Object.keys(inputObj)[0]);
    var captionTspan = this.createSvgElement("tspan", captionText);
    childElement.appendChild(captionTspan);
    captionTspan.classList.add("text");
    return childElement;
  },

  section: function (inputObj) {
    var sectionData = inputObj.section;
    var childElement = this.createSvgElement("text", "", Object.keys(inputObj)[0]);
    var emptyTspan = this.createSvgElement("tspan", "");
    var textTspan = this.createSvgElement("tspan", sectionData.text);
    textTspan.setAttribute("column-index", "0");
    textTspan.classList.add("text");
    var quantityTspan = this.createSvgElement("tspan", sectionData.quantity);
    quantityTspan.classList.add("quantity");
    quantityTspan.setAttribute("text-anchor", "end");
    var unitTspan = this.createSvgElement("tspan", sectionData.unit);
    unitTspan.classList.add("unit");
    childElement.appendChild(emptyTspan);
    childElement.appendChild(textTspan);
    childElement.appendChild(quantityTspan);
    childElement.appendChild(unitTspan);
    return childElement;
  },

  flow: function (inputObj) {
    var flowData = inputObj.flow || inputObj.stock;
    var childElement = this.createSvgElement("text", "", Object.keys(inputObj)[0]);
    var entryIconTspan = this.createSvgElement("tspan", SvgCore.ttTextIcon);
    entryIconTspan.classList.add("icon");
    if (flowData.color) {
      entryIconTspan.style.fill = flowData.color;
    }
    var entryTextTspan = this.createSvgElement("tspan", flowData.entry);
    entryTextTspan.classList.add("text");
    entryTextTspan.setAttribute("font-size", "1em");
    var quantityTspan = this.createSvgElement("tspan", flowData.quantity);
    quantityTspan.classList.add("quantity");
    quantityTspan.setAttribute("text-anchor", "end");
    var unitTspan = this.createSvgElement("tspan", flowData.unit);
    unitTspan.classList.add("unit");
    childElement.appendChild(entryIconTspan);
    childElement.appendChild(entryTextTspan);
    childElement.appendChild(quantityTspan);
    childElement.appendChild(unitTspan);
    if (flowData.textColor) childElement.style.fill = flowData.textColor;
    return childElement;
  },

  stock: function (inputObj) {
    var childElement = SvgTT_SvgElementWriter.flow(inputObj);
    return childElement;
  },

  summary: function (inputObj) {
    var summaryData = inputObj.summary;
    var childElement = this.createSvgElement("text", "", Object.keys(inputObj)[0]);

    var textTspan = this.createSvgElement("tspan", summaryData.text);
    textTspan.classList.add("text");
    if (summaryData.type) {
      var summaryColor;
      switch (summaryData.type) {
        case "warning":
          summaryColor = SvgCore.colors.warning;
          break;
        case "info":
          summaryColor = SvgCore.colors.warning;
          break;
        default:
          summaryColor = SvgCore.colors.warning;
      }
      textTspan.style.fill = summaryColor;
    }
    childElement.appendChild(textTspan);
    return childElement;
  }
};

// Supplements

function SvgSupplements_Initialize() {
  console.log("Initializing SvgSupplements");
  SvgSupplements_initListeners();
  SvgSupplements_initObject();
};

function SvgSupplements_initListeners() {
  var interactables = Object.keys(Svg_supplements);
  interactables.forEach(function (id) {
    interactableElement = document.getElementById(id)
    interactableElement.addEventListener("dblclick", function (e) {
      if (e.ctrlKey === false &amp;&amp; e.which === 1) {
        e.stopPropagation();
        SvgSupplements_openSupplement(e);
      }
    }, false)
    interactableElement.classList.add("hasLink");
  })  
}

function SvgSupplements_initObject(){
  SvgSupplements.htmlContainer = document.getElementById("SvgSupplementHtmlContainer")
  SvgSupplements.textWrapper = document.getElementById("SvgSupplementTextWrapper");
  SvgSupplements.textContainer = document.getElementById("SvgSupplementTextContainer");

  var closeButton = SvgSupplements.htmlContainer &amp;&amp; SvgSupplements.htmlContainer.getElementsByClassName("close")[0]
  if (closeButton) {
    closeButton.addEventListener("click", function(){
      SvgSupplements.htmlContainer.style.display="none"
    });
  }
  if (SvgSupplements.textWrapper) SvgSupplements.textWrapper.addEventListener("click", function(e){
    if (e.target == SvgSupplements.textWrapper)
    {
      SvgSupplements.htmlContainer.style.display="none";
    }
  });
}

var regexAbsoultFilePath = "^([a-zA-Z]\\:|\\\\)\\\\([^\\\\:*?\"" + String.fromCharCode(60, 62) + "|]+\\\\)*[^\\\\:*?\"" + String.fromCharCode(60, 62) + "|]+$";

var SvgSupplements = {
  htmlContainer: null,
  textWrapper: null,
  textContainer: null,
  urlRegExHelper: /:\/?\/\/[a-z1-9]*/,
  fileRegExHelper: new RegExp(regexAbsoultFilePath)
}

function SvgSupplements_openSupplement(e) {
  var supplements = Svg_supplements[e.currentTarget.id];
  Object.keys(supplements).forEach(function(supplementType) {
    var handler = SvgSupplements_supplementHandlers[supplementType];
    handler(supplements[supplementType])
  });
}

function MakeAbsolutePath(relative) {
  var basePath = location.href;
  var stack = basePath.split("/");
  var parts = relative.split("\\");
  if (parts.length == 1) {
    parts = relative.split("/");
  }
  stack.pop();
  for (var i = 0; i &lt; parts.length; i++) {
    if (parts[i] == "." || parts[i] == "")
      continue;
    if (parts[i] == "..")
      stack.pop();
    else
      stack.push(parts[i]);
  }
  return stack.join("/");
}

var SvgSupplements_supplementHandlers = {
  none: function () {},
  url: function (content) {
    content = SvgSupplements.urlRegExHelper.test(content) ? content : "http://"+content;
    var newTab = window.open(content, "");
    newTab.opener = null;
  },
  file: function (content) {
    content = SvgSupplements.fileRegExHelper.test(content) ? content : MakeAbsolutePath(content);
    var newTab = window.open(content);
    newTab.opener = null;
  },
  text: function (content) {
    if (SvgSupplements.htmlContainer &amp;&amp; SvgSupplements.textWrapper) {
      try {
      SvgSupplements.textContainer.innerHTML = content;
      SvgSupplements.htmlContainer.style.display = "block";
      SvgSupplements_prepareATags(SvgSupplements.textContainer);
    }
    catch(exception){
      console.log("Browser probably does not support the element 'foreignObject'");
      console.log(exception);
      }
    }
  }
}

function SvgSupplements_prepareATags(node){
  if (!node) return;
  var aTags = SvgCore_CollectionToArray(node.getElementsByTagName("a"));
  aTags.forEach(function(aTag){
    aTag.target = aTag.target || "_blank";
    aTag.rel = aTag.rel || "noopener noreferrer";
  })
}

// ZoomAndMove

function SvgZoomAndMove_Initialize() {
  console.log("Initializing SvgZoomAndMove")
  SvgZaM_initViewBoxAndBounds();
  SvgZaM_initZoomAndMoveFunctions();
}


var SvgZaM = {
  SvgWrapper: {
    el: null,
    bbox: null,
    boundingClientRect: null,
    viewBox: null
  },
  SvgContainer: {
    el: null,
    bbox: null,
    boundingClientRect: null,
    viewBox: null
  },
  moving: false,
}

function SvgZaM_initViewBoxAndBounds() {
  if (SvgCore &amp;&amp; Object.keys(SvgCore)) {
    SvgZaM = SvgCore
  } else {
    SvgZaM.SvgWrapper.el = document.getElementsByTagName("svg")[0]
    SvgZaM.SvgWrapper.bbox = SvgZaM.SvgWrapper.el.getBBox()
    SvgZaM.SvgWrapper.boundingClientRect = SvgZaM.SvgWrapper.el.getBoundingClientRect()
    SvgZaM.SvgWrapper.viewBox = SvgZaM.SvgWrapper.el.viewBox &amp;&amp; SvgZaM.SvgWrapper.el.viewBox.baseVal
    SvgZaM.SvgContainer.el = document.getElementById("SvgObjects")
    SvgZaM.SvgContainer.bbox = SvgZaM.SvgContainer.el.getBBox()
    SvgZaM.SvgContainer.boundingClientRect = SvgZaM.SvgContainer.el.getBoundingClientRect()
    SvgZaM.SvgContainer.viewBox = SvgZaM.SvgContainer.el.viewBox &amp;&amp; SvgZaM.SvgContainer.el.viewBox.baseVal
  }
  SvgZaM.zoomLevels = Array(1000, 600, 400, 200, 150, 100, 75, 50, 33, 25, 10)
  SvgZaM.scaleWidth = SvgZaM.SvgWrapper.viewBox.width / SvgZaM.SvgWrapper.el.clientWidth;
  SvgZaM.scaleHeight = SvgZaM.SvgWrapper.viewBox.height / SvgZaM.SvgWrapper.el.clientHeight;
  SvgZaM.moving = false;
}

function SvgZaM_initZoomAndMoveFunctions() {
  var svg = SvgZaM.SvgWrapper.el;
  var g = SvgZaM.SvgContainer.el;

  var backGroundRect = document.getElementById("SvgSankeyBackground");
  var svgSankey = document.getElementById("SvgSankey")
  var bgNotElements = SvgCore_CollectionToArray(SvgCore_findAll(svgSankey, ":not(g):not(text)"))
  var sankeyLegend = document.getElementById("SankeyLegend")
  if (sankeyLegend &amp;&amp; sankeyLegend.querySelector("rect")) bgNotElements.push(sankeyLegend.querySelector("rect"));
  var sankeyScale = document.getElementById("SankeyScale")
  if (sankeyScale &amp;&amp; sankeyScale.querySelector("rect")) bgNotElements.push(sankeyScale.querySelector("rect"))
  var transformList = g.transform.baseVal;
  var transformRequestObject = svg.createSVGTransform()

  var prevX = 0;
  var prevY = 0;

  svg.addEventListener("wheel", function(event) {
    if (event.ctrlKey)
    zoomOnScroll(event)
  });
  bgNotElements.forEach(function (el) {
    el.addEventListener("mousedown", function (event) {
      if (event.which == 1) {
        event.preventDefault();
        backGroundRect.classList.add("moving")      
        prevX = event.pageX;
        prevY = event.pageY;
        document.addEventListener("mousemove", movePicture, false);
      }
    });
    el.addEventListener("mouseup", function (event) {
      if (event.which == 1) {
        event.preventDefault();
        backGroundRect.classList.remove("moving")
        document.removeEventListener("mousemove", movePicture, false);
      }
    });
  })
  var zoomHelpers = {
    percentageToFactor: function(el) {return el / 100},
    sortAscending: function(a, b) {return a &gt; b ? 1 : -1}

  }
  var ZoomFactors = SvgZaM.zoomLevels.sort(zoomHelpers.sortAscending) &amp;&amp; SvgZaM.zoomLevels.map(zoomHelpers.percentageToFactor);
  var zoomFactor = ZoomFactors.indexOf(1) &gt;= 0 ? ZoomFactors.indexOf(1) : ZoomFactors.push(1) &amp;&amp; ZoomFactors.sort(zoomHelpers.sortAscending) &amp;&amp; ZoomFactors.indexOf(1);
  var zoomQuotient = 1;

  function zoomOnScroll(e) {
    e.preventDefault();
    var dir = e.deltaY === -0 ? 0 : e.deltaY &lt; 0 ? 1 : -1;
    if (dir == 0) {
      zoomQuotient = 1
    } else if (dir &lt; 0) {
      var newFactor = Math.max(0, zoomFactor + dir)
      zoomQuotient = ZoomFactors[newFactor] / ZoomFactors[zoomFactor]
      zoomFactor = newFactor
    } else if (dir &gt; 0) {
      var newFactor = Math.min(ZoomFactors.length - 1, zoomFactor + dir)
      zoomQuotient = ZoomFactors[newFactor] / ZoomFactors[zoomFactor]
      zoomFactor = newFactor
    }

    var xFactor = zoomQuotient;
    var yFactor = zoomQuotient;
    var mousePosi = SvgCore_getMouseCoords(e.pageX, e.pageY)

    transformRequestObject.setTranslate(mousePosi.x, mousePosi.y);
    transformList.appendItem(transformRequestObject);
    transformList.consolidate();
    transformRequestObject.setScale(xFactor, yFactor);
    transformList.appendItem(transformRequestObject);
    transformList.consolidate();
    transformRequestObject.setTranslate(-mousePosi.x, -mousePosi.y);
    transformList.appendItem(transformRequestObject);
    transformList.consolidate();
  }

  function movePicture(event) {
    var movement = {
      x: event.pageX - prevX,
      y: event.pageY - prevY
    }
    prevX = event.pageX;
    prevY = event.pageY;

    var currTransform = transformList.getItem(0)

    var scaleX = SvgZaM.scale.width * (currTransform.matrix.a || 1);
    var scaleY = SvgZaM.scale.height * (currTransform.matrix.d || 1);
    transformRequestObject.setTranslate(movement.x / scaleX, movement.y / scaleY);
    transformList.appendItem(transformRequestObject);
    transformList.consolidate().matrix;
  }
}
// Highlighting

function SvgHighlighting_Initialize() {
  console.log("Initializing SvgHighlighting")
  SvgHghlght.dataBlock = Svg_highlighting;
  SvgHghlght.arrows = SvgCore_CollectionToArray(SvgCore.SvgSankey.el.getElementsByClassName("arrowContainer"))
  SvgHghlght.processes = SvgCore_CollectionToArray(SvgCore.SvgSankey.el.getElementsByClassName("processContainer"))
  SvgHghlght.initConnections()
  SvgHghlght.initListeners()
}

var SvgHghlght = {
  classOpacity: "addOpacity",
  classHighlighted: "highlighted",
  isActive: false,
  nextMode: 0,
  lastElementFound: null,
  addHighlight: function (element) {
    element &amp;&amp; element.classList &amp;&amp; element.classList.add(SvgHghlght.classHighlighted);
  },
  addOpacity: function (element) {
    element.classList.add(SvgHghlght.classOpacity);
  }
}

SvgHghlght.initConnections = function() {
  var allConnections = SvgHghlght.dataBlock.connections;
  Object.keys(allConnections).forEach(function (process) {
    allConnections[process]["in"].forEach(function (arrowIn) {
      if (!allConnections[arrowIn]) allConnections[arrowIn] = {};
      allConnections[arrowIn]["destination"] = process;
    })
    allConnections[process]["out"].forEach(function (arrowOut) {
      if (!allConnections[arrowOut]) allConnections[arrowOut] = {};
      allConnections[arrowOut]["source"] = process;
    })
  });
}

SvgHghlght.initListeners = function() {
  var interactables = []
  interactables = interactables.concat(SvgCore_CollectionToArray(SvgCore.SvgSankey.el.getElementsByClassName("flow")))
  interactables = interactables.concat(SvgHghlght.processes)
  interactables.forEach(function (interactableEl) {
    interactableEl.addEventListener(
      "mouseup",
      function (e) {
        if (e.ctrlKey === true &amp;&amp; e.which === 1)
          SvgHghlght.mouseDownMiddleTrigger(e);
      },
      false
    );
  })
}

SvgHghlght.mouseDownMiddleTrigger = function(e) {
  SvgHghlght.toggleHighlightElements(e);
}

SvgHghlght.toggleHighlightElements = function(e) {
  if (SvgHghlght.isActive === true) {
    SvgHghlght.cleanUpHighlighting();
  }
  var elementFound = SvgCore_getFirstRelevantElement(e.srcElement, [
    "processContainer",
    "flow"
  ]);
  if (
    elementFound &amp;&amp;
    elementFound.nodeType === 1
  ) {
    if (elementFound.classList.contains("flow")) {
      if (elementFound !== SvgHghlght.lastElementFound) {
        SvgHghlght.nextMode = 0;
      }
      switch (SvgHghlght.nextMode) {
        case 0:
          SvgHghlght.highlightCurrentArrow(elementFound);
          SvgHghlght.nextMode = 1;
          break;
        case 1:
          SvgHghlght.highlightSameFlows(elementFound);
          SvgHghlght.nextMode = null;
          break;
        default:
          SvgHghlght.highlightNothing();
          SvgHghlght.nextMode = 0;
      }
    } else if (elementFound.classList.contains("processContainer")) {
      if (elementFound !== SvgHghlght.lastElementFound) {
        SvgHghlght.nextMode = 0;
      }
      switch (SvgHghlght.nextMode) {
        case 0:
          SvgHghlght.highlightProcessAndConnected(elementFound);
          SvgHghlght.nextMode = null;
          break;
        default:
          SvgHghlght.highlightNothing();
          SvgHghlght.nextMode = 0;
      }
    }
    SvgHghlght.isActive = true;
    SvgHghlght.lastElementFound = elementFound;
  }
}

SvgHghlght.cleanUpHighlighting = function() {
  var classesToCleanUp = [SvgHghlght.classOpacity, SvgHghlght.classHighlighted];
  classesToCleanUp.forEach(function (classToCleanUP) {
    var htmlCollectionOfClassX = document.getElementsByClassName(
      classToCleanUP
    );
    while (htmlCollectionOfClassX[0]) {
      htmlCollectionOfClassX[0].classList.remove(classToCleanUP);
    }
  })
}

SvgHghlght.getSourceAndDestination = function(arrowContainer) {
  var arr = [];
  var source = SvgHghlght.dataBlock.connections[arrowContainer.id].source
  var destination = SvgHghlght.dataBlock.connections[arrowContainer.id].destination
  if (source) arr.push(document.getElementById(source))
  if (destination) arr.push(document.getElementById(destination))
  return arr
}

SvgHghlght.highlightNothing = function() {}

SvgHghlght.highlightCurrentArrow = function(flowElement) {
  var arrowContainer = SvgCore_getFirstRelevantElement(flowElement, "arrowContainer");
  var elementsToHighlight = [].concat(
    SvgHghlght.getElementsFromContainer(arrowContainer),
    SvgHghlght.getElementsFromContainers(SvgHghlght.getSourceAndDestination(arrowContainer))
  )
  elementsToHighlight.forEach(SvgHghlght.addHighlight)

  var elementsToHide = SvgHghlght.getElementsToHide();
  elementsToHide.forEach(SvgHghlght.addOpacity);
}

SvgHghlght.highlightSameFlows = function(flowElement) {
  var flowEntry = undefined;
  Object.keys(SvgHghlght.dataBlock.entries).forEach(function (entry) {
    if (SvgHghlght.dataBlock.entries[entry].indexOf(flowElement.id) != -1) {
      flowEntry = entry;
    }
  })
  if (flowEntry) {
    var flowsAndStocksToHighlightIDs = SvgHghlght.dataBlock.entries[flowEntry];
    flowsAndStocksToHighlightIDs.forEach(function (flowOrStockId) {
      var flowOrStock = document.getElementById(flowOrStockId)
      if (flowOrStock) {
        SvgHghlght.addHighlight(flowOrStock);
        if (flowOrStock.classList.contains("flow")) {
          arrowContainer = SvgCore_getFirstRelevantElement(flowOrStock, "arrowContainer");
          var flowsInParent = SvgCore_CollectionToArray(arrowContainer.querySelectorAll(".flow"));
          var ownFlowOrder = -1;
          for (var flowIndx = 0; flowIndx &lt; flowsInParent.length; flowIndx++) {
            if (flowsInParent[flowIndx] == flowOrStock) {
              ownFlowOrder = flowIndx;
              break;
            }
          }
          var labels = SvgHghlght.getElementsFromContainer(arrowContainer).filter(function (element) {return element.nodeName == "tspan"})
          SvgHghlght.addHighlight(labels[ownFlowOrder]);
          var processElementsWithoutStocks = SvgHghlght.getElementsFromContainers(SvgHghlght.getSourceAndDestination(arrowContainer)).filter(function(elementInProcessContainer){
            return SvgCore_getFirstRelevantElement(elementInProcessContainer, ["processContainer", "stockContainer"]).classList.contains("processContainer");
          })
          processElementsWithoutStocks.forEach(SvgHghlght.addHighlight);
        } else if (flowOrStock.classList.contains("stock")) {          
          var processContainer = SvgCore_getFirstRelevantElement(flowOrStock, "processContainer");
          var stockContainer = SvgCore_getFirstRelevantElement(flowOrStock, "stockContainer");
          var stocksInContainer = SvgCore_CollectionToArray(stockContainer.querySelectorAll(".stock"));
          var ownFlowOrder = -1;
          for (var stockIndx = 0; stockIndx &lt; stocksInContainer.length; stockIndx++) {
            if (stocksInContainer[stockIndx] == flowOrStock) {
              ownFlowOrder = stockIndx;
              break;
            }
          }
          var labels = SvgHghlght.getElementsFromContainer(stockContainer).filter(function (element) {return element.nodeName == "tspan"})
          SvgHghlght.addHighlight(labels[ownFlowOrder]);
          var processElementsWithoutStocks = SvgHghlght.getElementsFromContainer(processContainer).filter(function(elementInProcessContainer){
            return SvgCore_getFirstRelevantElement(elementInProcessContainer, ["processContainer", "stockContainer"]).classList.contains("processContainer");
          })
          processElementsWithoutStocks.forEach(SvgHghlght.addHighlight);
        }
      }
    })
  }
  SvgHghlght.getElementsToHide().forEach(SvgHghlght.addOpacity);
}

SvgHghlght.highlightProcessAndConnected = function(processElement) {
  var toHighlight = [].concat(
        SvgHghlght.getElementsFromContainer(processElement)
    )
  var inputIDs = SvgHghlght.dataBlock.connections[processElement.id]["in"] ? SvgHghlght.dataBlock.connections[processElement.id]["in"] : [];
  var outputIDs = SvgHghlght.dataBlock.connections[processElement.id]["out"] ? SvgHghlght.dataBlock.connections[processElement.id]["out"] : [];
  var arrowIDs = [].concat(inputIDs, outputIDs)
  arrowIDs.forEach(function(arrowID) {
    toHighlight = toHighlight.concat(SvgHghlght.getElementsFromContainer(document.getElementById(arrowID)))
  });
  toHighlight.forEach(SvgHghlght.addHighlight);
  SvgHghlght.getElementsToHide().forEach(SvgHghlght.addOpacity);
}

SvgHghlght.getElementsFromContainer = function(container) {
  var arr = [];
  if (!container) return arr;
  if (container.classList.contains("label")) {
    arr = arr.concat(SvgCore_CollectionToArray(container.children))
  } else if (container.classList.contains("stockContainer")) {
    arr = arr.concat(SvgCore_CollectionToArray(container.querySelectorAll("path.stock, path.stroke")))
    arr = arr.concat(SvgHghlght.getElementsFromContainers(SvgCore_CollectionToArray(container.querySelectorAll("text.label"))))  
  } else if (container.classList.contains("arrowContainer")) {
    arr = arr.concat(SvgCore_CollectionToArray(container.querySelectorAll("path.flow, path.stroke")))
    arr = arr.concat(SvgHghlght.getElementsFromContainers(SvgCore_CollectionToArray(container.querySelectorAll("text.label"))))
  } else if (container.classList.contains("processContainer")) {
    arr = arr.concat(SvgCore_CollectionToArray(container.getElementsByClassName("processShape")))
    arr = arr.concat(SvgCore_CollectionToArray(container.getElementsByTagName("use")))
    arr = arr.concat(SvgCore_CollectionToArray(container.querySelectorAll("path.stock, path.stroke")))
    arr = arr.concat(SvgHghlght.getElementsFromContainers(SvgCore_CollectionToArray(container.querySelectorAll("text.label"))))
  }
  return arr;
}

SvgHghlght.getElementsFromContainers = function (containerArray) {
  var arr = [];
  if (!Array.isArray(containerArray)) return arr;
  containerArray.forEach(function (container) {
    arr = arr.concat(SvgHghlght.getElementsFromContainer(container))
  })
  return arr;
}

SvgHghlght.elementNotHighlighted = function (element) {
  return !element.classList.contains(SvgHghlght.classHighlighted);
}

SvgHghlght.getElementsToHide = function () {
  var arr = [];
  arr = arr.concat(SvgHghlght.getElementsFromContainers(SvgHghlght.processes))
  arr = arr.concat(SvgHghlght.getElementsFromContainers(SvgHghlght.arrows))
  arr = arr.filter(SvgHghlght.elementNotHighlighted)
  return arr;
}
</script>
  <style>tspan {
	white-space: pre;
}

#SvgSankey {
}

#SvgToolTip{
	transition: opacity 1s;
}

.highlighted { 
	filter: url(#highlightFilter);
}

.addOpacity {
	filter: url(#opacityFilter);
}

.hasLink:hover {
	cursor: pointer;
}

#SvgToolTipText {
	font-family: Helvetica, Arial, sans-serif;
}

#SvgToolTipText .title {
	font-size: 150%;
	font-weight: bold;
}

#SvgToolTipText .caption {
	font-size: 120%;
	font-weight: bold;
}

#SvgToolTipText .section {
	font-weight: bold;
}

#SvgToolTipText .flow {
}

#SvgToolTipText .stock {
	fill: #606060;
}

#SvgToolTipBackground {
	-webkit-backdrop-filter: blur(4px);
	backdrop-filter: blur(4px);
	opacity: 0.8
}
</style>
</svg>