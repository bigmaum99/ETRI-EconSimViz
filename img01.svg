<?xml version="1.0" encoding="utf-8"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="-1 -700 794.4668 2112.85181" preserveAspectRatio="xMinYMin meet">
  <!--
This diagram was created with e!Sankey 5 pro
More information at www.e-sankey.com
-->
  <defs>
    <filter id="opacityFilter" width="150%" height="150%">
      <feColorMatrix type="matrix" values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.3 0 " />
    </filter>
    <filter id="highlightFilter" width="150%" height="150%">
      <feColorMatrix type="matrix" values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0 " />
    </filter>
    <filter id="ttBlur" width="150%" height="150%">
      <feGaussianBlur id="ttBlurFilter" x="0" y="0" width="1" height="1" stdDeviation="3" result="blur" />
      <feMerge result="merge">
        <feMergeNode in="SourceGraphic" />
        <feMergeNode in="blur" />
      </feMerge>
    </filter>
  </defs>
  <g id="SvgObjects" class="SvgObjectsContainer" transform="scale(1)" text-rendering="optimizeLegibility" image-rendering="optimizeQuality" font-family="Microsoft Sans Serif" font-size="10pt">
    <g id="SvgSankey">
      <rect id="SvgSankeyBackground" x="-1" y="-700" width="794.4668" height="2112.85181" fill="#FFFFFF" opacity="0" />
      <path fill="none" stroke="none" d="M0 0 L100 0 100 100 0 100 Z " />
      <g id="" class="processContainer">
        <rect class="processShape" fill="rgb(228,240,229)" fill-opacity="0.7490196" stroke="rgb(42,96,47)" x="448" y="56" width="64" height="112" />
        <text font-size="9pt" fill="rgb(36,80,0)" id="1" class="label">
          <tspan x="460.5" y="107">Battery</tspan>
          <tspan x="455.5" y="120.582031">Charging</tspan>
        </text>
      </g>
      <g id="2" class="processContainer">
        <rect class="processShape" fill="rgb(228,240,229)" fill-opacity="0.7490196" stroke="rgb(42,96,47)" x="272" y="56" width="64" height="112" />
        <text font-size="9pt" fill="rgb(36,80,0)" id="3" class="label">
          <tspan x="284.5" y="107">Battery</tspan>
          <tspan x="276.5" y="120.582031">Discharge</tspan>
        </text>
      </g>
      <g id="4" class="processContainer">
        <rect class="processShape" fill="rgb(228,240,229)" fill-opacity="0.7490196" stroke="rgb(42,96,47)" x="104" y="280" width="105.84" height="32" />
        <text font-size="9pt" fill="rgb(36,80,0)" id="5" class="label">
          <tspan x="120" y="299">Electr. Energy</tspan>
        </text>
      </g>
      <g id="6" class="processContainer">
        <rect class="processShape" fill="rgb(228,240,229)" fill-opacity="0.7490196" stroke="rgb(42,96,47)" x="112" y="392" width="96" height="32" />
        <text font-size="9pt" fill="rgb(36,80,0)" id="7" class="label">
          <tspan x="128" y="419">Power Train</tspan>
        </text>
      </g>
      <g id="8" class="processContainer">
        <rect class="processShape" fill="rgb(228,240,229)" fill-opacity="0.7490196" stroke="rgb(42,96,47)" x="128" y="520" width="81.5814743" height="32" />
        <text font-size="9pt" fill="rgb(36,80,0)" id="9" class="label">
          <tspan x="152" y="539">Wheel</tspan>
        </text>
      </g>
      <g id="10" class="processContainer" />
      <g id="11" class="processContainer">
        <rect class="processShape" fill="rgb(228,240,229)" fill-opacity="0.7490196" stroke="rgb(42,96,47)" x="600" y="280" width="26.780798" height="32" />
        <text font-size="9pt" fill="rgb(36,80,0)" id="12" class="label">
          <tspan x="640" y="291">Electric</tspan>
          <tspan x="640" y="304.582031">Energy</tspan>
        </text>
      </g>
      <g id="13" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="42_0" class="flow" stroke="none" d="M598.068 0.5 L681.932 0.5 L681.932 72 L681.932 77.89644 L681.737366 82.8507462 L681.154541 87.77452 L680.1873 92.6374 L678.841431 97.4093857 L677.125366 102.061043 L675.0496 106.563744 L672.626953 110.889709 L669.8724 115.012222 L666.802856 118.90593 L663.4372 122.546844 L659.7963 125.912445 L655.902649 128.981964 L651.7801 131.736572 L647.454163 134.15921 L642.951355 136.235016 L638.299744 137.951111 L633.527832 139.296921 L628.6649 140.264221 L623.7411 140.847 L618.7868 141.041656 L512.5 141.041656 L512.5 57.1776657 L598.068 57.1776657 L598.068 72 Z" />
        </g>
        <text font-size="9pt" fill="rgb(255,255,255)" id="14" class="label">
          <tspan x="622.0325" y="35">100.0 %</tspan>
        </text>
      </g>
      <g id="15" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="43_0" class="flow" stroke="none" d="M447.5 58.27411 L447.5 166.274109 L407.261261 166.274109 L376.261261 166 L336.5 166 L336.5 58 L376.738739 58 L407.738739 58.27411 Z" />
        </g>
        <text font-size="9pt" fill="rgb(255,255,255)" id="16" class="label">
          <tspan x="374.306183" y="122.999832">98.5 %</tspan>
        </text>
      </g>
      <g id="17" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="44_0" class="flow" stroke="none" d="M271.5 60.1600037 L271.5 166 L200.803024 166 L209.84 155.144257 L209.84 279.5 L104 279.5 L104 146.20549 L104.048874 143.389908 L104.195419 140.577744 L104.439484 137.772339 L104.780762 134.977081 L105.218826 132.195374 L105.753181 129.430511 L106.383163 126.685883 L107.108 123.964783 L107.926849 121.270447 L108.8387 118.606171 L109.842468 115.975159 L110.936935 113.380524 L112.1208 110.82547 L113.392609 108.313026 L114.750839 105.84626 L116.193878 103.428078 L117.719963 101.061447 L119.327255 98.7492 L121.013824 96.4941254 L122.777634 94.29895 L127.182709 89.0073242 L129.486755 86.35977 L131.9046 83.81573 L134.431549 81.3800659 L137.06282 79.05745 L139.79332 76.85237 L142.617828 74.76902 L145.530884 72.81145 L148.526932 70.98337 L151.600174 69.28833 L154.744766 67.72957 L157.95462 66.31008 L161.223541 65.03261 L164.54538 63.8995628 L167.913589 62.9131775 L171.321823 62.0752945 L174.7635 61.387558 L178.232025 60.85128 L181.720657 60.46748 L185.222778 60.236908 L188.731659 60.1600037 Z" />
        </g>
        <text font-size="9pt" fill="rgb(255,255,255)" id="18" class="label">
          <tspan x="179.859177" y="123.000183">98.0 %</tspan>
        </text>
      </g>
      <g id="19" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="45_0" class="flow" stroke="none" d="M110.3504 312.5 L209.84 312.5 L209.84 1399.9259 L209.7448 1398.9259 L209.7448 391.5 L110.2552 391.5 L110.2552 -695.9259 L110.3504 -694.9259 Z" />
        </g>
        <text font-size="9pt" fill="rgb(255,255,255)" id="20" class="label">
          <tspan x="144" y="347">94.0 %</tspan>
        </text>
      </g>
      <g id="21" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="46_0" class="flow" stroke="none" d="M128.09227 424.5 L209.7448 424.5 L209.7448 464.67392 L209.617 479.67392 L209.617 519.5 L127.964478 519.5 L127.964478 479.32608 L128.09227 464.32608 Z" />
        </g>
        <text font-size="9pt" fill="rgb(255,255,255)" id="22" class="label">
          <tspan x="160" y="483">82.1 %</tspan>
        </text>
      </g>
      <g id="23" class="processContainer">
        <rect class="processShape" fill="rgb(228,240,229)" fill-opacity="0.7490196" stroke="rgb(42,96,47)" x="376" y="656" width="64" height="39.9749222" />
        <text font-size="9pt" fill="rgb(36,80,0)" id="24" class="label">
          <tspan x="381.5" y="667">Kinetic</tspan>
          <tspan x="380.5" y="680.582031">Energy</tspan>
        </text>
      </g>
      <g id="25" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="53_0" class="flow" stroke="none" d="M169.570923 552.5 L209.617 552.5 L209.617 653.5035 L209.622147 653.792236 L209.637634 654.0807 L209.663422 654.368347 L209.699463 654.6549 L209.745712 654.94 L209.802124 655.223267 L209.868622 655.504333 L209.945129 655.7829 L210.031555 656.0585 L210.127747 656.3308 L210.233643 656.599548 L210.349045 656.8643 L210.473846 657.124756 L210.60788 657.3806 L210.750961 657.631531 L210.902924 657.877136 L211.063568 658.1172 L211.2327 658.3513 L211.410049 658.5793 L211.595474 658.8007 L206.959061 653.4597 L207.168015 653.690247 L207.386627 653.9117 L207.614563 654.123535 L207.8513 654.325439 L208.096466 654.517 L208.349625 654.698 L208.6103 654.867859 L208.877975 655.02655 L209.1522 655.1735 L209.4325 655.3087 L209.718277 655.431763 L210.009079 655.5425 L210.304352 655.6406 L210.603546 655.7261 L210.906128 655.798645 L211.211533 655.858154 L211.519211 655.904663 L211.8286 655.9378 L212.139114 655.9578 L212.4502 655.9645 L375.5 655.9645 L375.5 696.0105 L212.4502 696.0105 L210.425858 695.9672 L208.405228 695.837341 L206.392014 695.6211 L204.389877 695.319 L202.4025 694.931458 L200.4335 694.4592 L198.486542 693.9032 L196.56514 693.2644 L194.672836 692.544067 L192.813049 691.7433 L190.989273 690.863831 L189.204758 689.907043 L187.462814 688.8748 L185.766647 687.769043 L184.119324 686.591736 L182.52388 685.345 L180.983215 684.031 L179.500214 682.6525 L178.0775 681.211731 L176.717758 679.7114 L181.354172 685.0524 L180.249924 683.733459 L179.193512 682.375854 L178.186279 680.9813 L177.229553 679.5518 L176.324509 678.0889 L175.472321 676.5947 L174.674072 675.0709 L173.9308 673.5196 L173.243439 671.9427 L172.612885 670.3423 L172.039917 668.720337 L171.525269 667.0789 L171.069611 665.4202 L170.673523 663.7462 L170.337509 662.059143 L170.062012 660.3612 L169.847382 658.6545 L169.693848 656.94104 L169.601669 655.2234 L169.570923 653.5035 Z" />
        </g>
        <text font-size="9pt" fill="rgb(255,255,255)" id="26" class="label">
          <tspan x="216" y="675">49.0 %</tspan>
        </text>
      </g>
      <g id="27" class="processContainer">
        <rect class="processShape" fill="rgb(228,240,229)" fill-opacity="0.7490196" stroke="rgb(42,96,47)" x="600" y="520" width="32.7794571" height="32" />
        <text font-size="9pt" fill="rgb(36,80,0)" id="28" class="label">
          <tspan x="640" y="531">Wheel</tspan>
        </text>
      </g>
      <g id="29" class="processContainer">
        <rect class="processShape" fill="rgb(228,240,229)" fill-opacity="0.7490196" stroke="rgb(42,96,47)" x="600" y="392" width="31.140461" height="32" />
        <text font-size="9pt" fill="rgb(36,80,0)" id="30" class="label">
          <tspan x="638.5" y="403">Power</tspan>
          <tspan x="642" y="416.582031">Train</tspan>
        </text>
      </g>
      <g id="31" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="66_0" class="flow" stroke="none" d="M440.5 688.815063 L440.5 655.9645 L590.5752 655.9645 L591.0704 655.949158 L591.56366 655.903137 L592.053162 655.82666 L592.537048 655.7201 L593.0133 655.5837 L593.4803 655.4181 L593.936035 655.2238 L594.3789 655.0018 L594.8072 654.7527 L595.2192 654.477539 L595.6134 654.1774 L595.9882 653.853455 L596.3423 653.5069 L596.674255 653.1391 L596.9827 652.7514 L597.2666 652.3454 L597.524841 651.922546 L597.7563 651.484558 L597.960266 651.033 L598.135864 650.569763 L599.248535 647.3351 L599.317749 647.1283 L599.383545 646.920349 L599.445862 646.7114 L599.5047 646.5014 L599.5601 646.2905 L599.612 646.078735 L599.660339 645.8661 L599.705139 645.6527 L599.74646 645.4386 L599.7842 645.223755 L599.818359 645.0084 L599.849 644.792542 L599.876 644.5761 L599.8994 644.3593 L599.9193 644.1422 L599.935547 643.924744 L599.9481 643.707031 L599.9572 643.4892 L599.9626 643.2711 L599.9644 643.0531 L599.9644 552.5 L632.815 552.5 L632.815 643.0531 L632.808655 643.8153 L632.789734 644.577332 L632.7582 645.338867 L632.714 646.0998 L632.6572 646.86 L632.5879 647.6191 L632.506 648.3769 L632.4115 649.13324 L632.304565 649.887939 L632.185059 650.640747 L632.0532 651.3915 L631.9089 652.1399 L631.752136 652.885864 L631.583069 653.62915 L631.4018 654.3695 L631.2082 655.10675 L631.0024 655.8407 L630.784546 656.5711 L630.554565 657.297852 L630.3126 658.0206 L629.199951 661.2553 L628.3029 663.622 L627.261047 665.92865 L626.0783 668.1663 L624.7593 670.326355 L623.3089 672.4007 L621.732849 674.381165 L620.037231 676.2602 L618.228455 678.0306 L616.3135 679.6856 L614.299744 681.21875 L612.1949 682.624268 L610.006958 683.8968 L607.7445 685.0313 L605.4161 686.02356 L603.03064 686.8697 L600.5975 687.5664 L598.1258 688.1111 L595.625061 688.501648 L593.105042 688.736633 L590.5752 688.815063 Z" />
        </g>
        <text font-size="9pt" fill="rgb(255,255,255)" id="32" class="label">
          <tspan x="480" y="675">82.0 %</tspan>
        </text>
      </g>
      <g id="33" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="67_0" class="flow" stroke="none" d="M631.175964 519.5 L599.9644 519.5 L599.9644 479.499969 L599.9645 464.499969 L599.9645 424.5 L631.176 424.5 L631.176 464.500031 L631.175964 479.500031 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="34" class="label">
          <tspan x="552" y="515">95.0 %</tspan>
        </text>
      </g>
      <g id="35" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="68_0" class="flow" stroke="none" d="M626.8164 391.5 L599.9645 391.5 L599.9645 351.500031 L599.9644 352.500031 L599.9644 312.5 L626.816345 312.5 L626.816345 352.499969 L626.8164 351.499969 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="36" class="label">
          <tspan x="552" y="387">86.0 %</tspan>
        </text>
      </g>
      <g id="37" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="69_0" class="flow" stroke="none" d="M625.745056 279.5 L599.9644 279.5 L599.9644 183.82045 L599.9588 183.396622 L599.942 182.9731 L599.9141 182.55014 L599.875061 182.1281 L599.8248 181.707214 L599.7636 181.2878 L599.6913 180.870148 L599.608032 180.454544 L599.5138 180.04129 L599.4087 179.630661 L599.2928 179.222946 L599.1662 178.81842 L599.029 178.417389 L598.8812 178.020111 L598.723145 177.626862 L598.554565 177.237915 L598.3759 176.853546 L598.1872 176.474045 L597.988464 176.099625 L597.779968 175.730591 L596.3864 173.3382 L596.0267 172.756058 L595.637 172.1935 L595.2186 171.652008 L594.7726 171.133041 L594.300049 170.638062 L593.8023 170.168411 L593.280762 169.725342 L592.7369 169.310059 L592.172058 168.923691 L591.5879 168.567322 L590.9859 168.2419 L590.367737 167.9483 L589.7351 167.687332 L589.0898 167.459717 L588.4334 167.266068 L587.7679 167.106888 L587.095 166.98262 L586.416443 166.893646 L585.7342 166.840134 L585.0502 166.8223 L512.5 166.822357 L512.5 141.041656 L585.0502 141.0416 L587.078552 141.094528 L589.1014 141.253143 L591.1133 141.517014 L593.1086 141.885452 L595.082 142.3574 L597.028137 142.931641 L598.94165 143.606552 L600.817444 144.380341 L602.6502 145.25087 L604.4352 146.21579 L606.1674 147.272476 L607.8421 148.41803 L609.454834 149.649353 L611.00116 150.96312 L612.4769 152.355743 L613.878052 153.82338 L615.2007 155.362091 L616.441345 156.967667 L617.5966 158.635788 L618.663269 160.361847 L620.0568 162.754211 L620.5998 163.7152 L621.1171 164.69017 L621.6087 165.678436 L622.074 166.679321 L622.5127 167.692139 L622.924561 168.716156 L623.309265 169.7507 L623.666565 170.795013 L623.9963 171.8484 L624.298 172.91011 L624.571655 173.9794 L624.817 175.055527 L625.033936 176.137756 L625.2222 177.225327 L625.3817 178.3175 L625.5124 179.4135 L625.6142 180.512543 L625.6869 181.6139 L625.7305 182.716782 L625.745056 183.82045 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="38" class="label">
          <tspan x="552" y="273.681763">96.0 %</tspan>
        </text>
      </g>
      <g id="39" class="processContainer">
        <text font-size="9pt" fill="rgb(36,80,0)" id="40" class="label">
          <tspan x="400" y="-5">Charging Losses</tspan>
        </text>
      </g>
      <g id="41" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="76_0" class="flow" stroke="none" d="M447.5 57.1776657 L447.5 58.27411 L429.2132 58.27411 L427.505829 58.2070236 L425.80896 58.00619 L424.1331 57.67284 L422.488556 57.20903 L420.885437 56.6176224 L419.3337 55.90226 L417.8429 55.0673523 L416.42215 54.11805 L415.080261 53.0602036 L413.825531 51.9003372 L412.66568 50.6456 L411.607849 49.30373 L410.658539 47.8829956 L409.823639 46.3921661 L409.108246 44.8404236 L408.516846 43.2373352 L408.05304 41.59279 L407.7197 39.9169235 L407.51886 38.2200661 L407.451782 36.5126839 L407.451782 32 L407.451782 5.25756264 L401.451782 5.25756264 L408 0.5 L414.548218 5.25756264 L408.548218 5.25756264 L408.548218 32 L408.548218 36.5126839 L408.611938 38.134037 L408.802643 39.7454 L409.1192 41.33683 L409.559631 42.8985138 L410.121246 44.42083 L410.800568 45.8943863 L411.5934 47.3101044 L412.494873 48.6592522 L413.49942 49.9335175 L414.600861 51.12503 L415.792358 52.2264557 L417.06662 53.2310028 L418.415771 54.1324768 L419.8315 54.9253159 L421.305054 55.6046371 L422.827362 56.1662445 L424.389069 56.6066856 L425.980469 56.9232445 L427.591827 57.11396 L429.2132 57.1776657 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="42" class="label">
          <tspan x="368" y="11.000001">1.0 %</tspan>
        </text>
      </g>
      <g id="43" class="processContainer">
        <text font-size="9pt" fill="rgb(36,80,0)" id="44" class="label">
          <tspan x="376" y="227">Charging Losses</tspan>
          <tspan x="376" y="240.582031">(Recuperation)</tspan>
        </text>
      </g>
      <g id="45" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="83_0" class="flow" stroke="none" d="M447.5 166.274109 L447.5 166.822327 L432.201263 166.822327 L430.777252 166.862961 L429.35788 166.984711 L427.947723 167.18721 L426.551422 167.469772 L425.1735 167.831482 L423.818481 168.271179 L422.4907 168.78743 L421.194519 169.37854 L419.934143 170.042587 L418.7137 170.77742 L417.53714 171.580658 L416.408264 172.449661 L415.33078 173.3816 L414.308228 174.373489 L413.343872 175.422058 L412.440857 176.5239 L411.602142 177.675446 L410.830444 178.872925 L410.1283 180.112473 L409.497955 181.390045 L410.9152 178.298355 L410.6613 178.868347 L410.419647 179.44368 L410.19046 180.024063 L409.973816 180.609238 L409.769775 181.198929 L409.578461 181.7929 L409.399963 182.390808 L409.2343 182.992432 L409.081665 183.597458 L408.942047 184.205643 L408.815552 184.816681 L408.702179 185.4303 L408.602051 186.0462 L408.515167 186.664124 L408.441559 187.283783 L408.381317 187.904846 L408.3344 188.527084 L408.3009 189.150192 L408.2808 189.773865 L408.2741 190.397827 L408.2741 202.941589 L414.2741 202.941589 L408 207.5 L401.7259 202.941589 L407.7259 202.941589 L407.7259 190.397827 L407.7327 189.762085 L407.753174 189.126633 L407.787354 188.491776 L407.8351 187.857788 L407.8965 187.224976 L407.971466 186.593628 L408.06 185.96405 L408.162018 185.336517 L408.277527 184.7113 L408.406464 184.08873 L408.5487 183.46907 L408.704224 182.8526 L408.873 182.239624 L409.05484 181.630417 L409.249817 181.025253 L409.4577 180.424423 L409.678436 179.8282 L409.911957 179.236862 L410.1581 178.650665 L410.41684 178.0699 L408.9996 181.161591 L409.6438 179.855972 L410.361328 178.589233 L411.15 177.365448 L412.00708 176.188629 L412.929932 175.062592 L413.915466 173.991013 L414.96048 172.977371 L416.061584 172.024948 L417.21524 171.136871 L418.417633 170.316025 L419.664856 169.565048 L420.952881 168.886414 L422.277557 168.282333 L423.63446 167.754761 L425.019257 167.30542 L426.4274 166.935776 L427.85434 166.646988 L429.295441 166.440063 L430.746 166.315628 L432.201263 166.274109 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="46" class="label">
          <tspan x="376" y="259">0.5 %</tspan>
        </text>
      </g>
      <g id="47" class="processContainer">
        <text font-size="9pt" fill="rgb(36,80,0)" id="48" class="label">
          <tspan x="208" y="-21">Discharge</tspan>
          <tspan x="208" y="-7.41797066">Losses</tspan>
        </text>
      </g>
      <g id="49" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="90_0" class="flow" stroke="none" d="M271.5 58 L271.5 60.1600037 L237.213211 60.1600037 L235.464111 60.09128 L233.725784 59.8855362 L232.008972 59.54404 L230.324234 59.0688972 L228.681976 58.46304 L227.0923 57.7301941 L225.565033 56.8748856 L224.109589 55.9023857 L222.73494 54.8186951 L221.449539 53.6304855 L220.261322 52.34509 L219.177628 50.9704247 L218.205124 49.51498 L217.349823 47.9877167 L216.616974 46.3980522 L216.0111 44.7557945 L215.535965 43.07106 L215.194473 41.35424 L214.988708 39.6159172 L214.92 37.8668137 L214.92 24 L214.92 5.643921 L208.92 5.643921 L216 0.5 L223.08 5.643921 L217.08 5.643921 L217.08 24 L217.08 37.8668137 L217.142059 39.4464455 L217.327866 41.0163422 L217.636276 42.56682 L218.065384 44.0883141 L218.612549 45.5714531 L219.274384 47.0070953 L220.046829 48.38638 L220.9251 49.70081 L221.903809 50.94228 L222.976883 52.1031342 L224.137741 53.1762161 L225.379211 54.15491 L226.693634 55.03318 L228.072922 55.80562 L229.508575 56.4674568 L230.991714 57.0146141 L232.513214 57.44372 L234.063675 57.75213 L235.633575 57.93794 L237.213211 58 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="50" class="label">
          <tspan x="176" y="19">2.0 %</tspan>
        </text>
      </g>
      <g id="51" class="processContainer">
        <text font-size="9pt" fill="rgb(36,80,0)" id="52" class="label">
          <tspan x="0" y="355">Aux.</tspan>
          <tspan x="0" y="368.582031">Consumers</tspan>
        </text>
      </g>
      <g id="53" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="97_0" class="flow" stroke="none" d="M104 312.5 L110.3504 312.5 L110.3504 330.7868 L110.275223 332.7003 L110.05014 334.602 L109.676552 336.480164 L109.156754 338.323242 L108.493942 340.119843 L107.692223 341.8589 L106.756531 343.5297 L105.692627 345.121948 L104.50708 346.625824 L103.207207 348.032 L101.800995 349.331879 L100.297142 350.517426 L98.7049 351.581329 L97.0341 352.517029 L95.29504 353.318756 L93.49843 353.981567 L91.65536 354.501343 L89.77718 354.874939 L87.87549 355.1 L85.962 355.1752 L64 355.1752 L50.80692 355.1752 L48.5 352 L50.80692 348.8248 L64 348.8248 L85.962 348.8248 L87.37724 348.7692 L88.78376 348.602722 L90.17289 348.326416 L91.53604 347.941956 L92.8648453 347.451752 L94.15108 346.858765 L95.38683 346.166718 L96.564476 345.379852 L97.67674 344.503021 L98.71679 343.5416 L99.67821 342.501556 L100.555054 341.389282 L101.341919 340.211639 L102.033974 338.9759 L102.626938 337.689667 L103.117157 336.36084 L103.50161 334.997681 L103.777924 333.608582 L103.9444 332.202057 L104 330.7868 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="54" class="label">
          <tspan x="0" y="387">6.0 %</tspan>
        </text>
      </g>
      <g id="55" class="processContainer">
        <text font-size="9pt" fill="rgb(36,80,0)" id="56" class="label">
          <tspan x="0" y="491">Losses</tspan>
          <tspan x="0" y="504.582031">Power Train</tspan>
        </text>
      </g>
      <g id="57" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="104_0" class="flow" stroke="none" d="M110.255188 424.5 L128.09227 424.5 L128.09227 458.7868 L127.999382 461.1509 L127.7213 463.500458 L127.259727 465.820923 L126.617516 468.098022 L125.798622 470.317749 L124.808105 472.4663 L123.652054 474.530579 L122.337616 476.4978 L120.872879 478.355835 L119.266884 480.09317 L117.529526 481.699158 L115.671524 483.163879 L113.704323 484.478333 L111.640053 485.634369 L109.491447 486.6249 L107.271744 487.4438 L104.994644 488.086 L102.674164 488.547577 L100.324631 488.825653 L97.9605255 488.918549 L88.5 488.918549 L54.9797 488.918549 L48.5 480 L54.9797 471.081451 L88.5 471.081451 L97.9605255 471.081451 L98.9251556 471.043549 L99.8838348 470.930084 L100.830658 470.74176 L101.759781 470.479736 L102.665489 470.1456 L103.542183 469.741425 L104.384468 469.2697 L105.187149 468.7334 L105.945267 468.135742 L106.654167 467.480438 L107.309464 466.771545 L107.90712 466.013428 L108.443451 465.210754 L108.915146 464.368469 L109.319313 463.49176 L109.65345 462.58606 L109.915489 461.656921 L110.103821 460.7101 L110.217293 459.751434 L110.255188 458.7868 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="58" class="label">
          <tspan x="0" y="523">17.9 %</tspan>
        </text>
      </g>
      <g id="59" class="processContainer">
        <text font-size="9pt" fill="rgb(36,80,0)" id="60" class="label">
          <tspan x="16" y="587">Rolling</tspan>
          <tspan x="16" y="600.582031">Friction</tspan>
        </text>
      </g>
      <g id="61" class="processContainer">
        <text font-size="9pt" fill="rgb(36,80,0)" id="62" class="label">
          <tspan x="16" y="651">Air Drag</tspan>
        </text>
      </g>
      <g id="63" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="117_0" class="flow" stroke="none" d="M127.964478 552.5 L146.72821 552.5 L146.72821 586.7868 L146.6339 589.187256 L146.351532 591.572937 L145.882874 593.929138 L145.230774 596.2412 L144.3993 598.495 L143.393539 600.6767 L142.219727 602.7727 L140.885071 604.770142 L139.397827 606.6567 L137.767136 608.4208 L136.003052 610.0515 L134.116455 611.538757 L132.119019 612.873352 L130.02301 614.047241 L127.84137 615.053 L125.58754 615.8844 L123.275421 616.5365 L120.919258 617.0052 L118.5336 617.2876 L116.133141 617.3819 L112.5 617.3819 L79.31633 617.3819 L72.5 608 L79.31633 598.6181 L112.5 598.6181 L116.133141 598.6181 L117.061417 598.581665 L117.983971 598.4725 L118.895111 598.29126 L119.789215 598.039063 L120.6608 597.7175 L121.504456 597.3286 L122.314995 596.8747 L123.087425 596.3586 L123.816986 595.783447 L124.499161 595.152832 L125.129761 594.470642 L125.704895 593.7411 L126.221008 592.9686 L126.674942 592.158142 L127.063866 591.314453 L127.3854 590.4429 L127.637581 589.548767 L127.81881 588.637634 L127.927994 587.7151 L127.964478 586.7868 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="64" class="label">
          <tspan x="16.0000019" y="619">23.0 %</tspan>
        </text>
      </g>
      <g id="65" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="118_0" class="flow" stroke="none" d="M146.72821 552.5 L169.570923 552.5 L169.570923 634.7868 L169.470322 637.3473 L169.169144 639.891968 L168.66922 642.4052 L167.973663 644.87146 L167.086761 647.275452 L166.013962 649.6026 L164.7619 651.8383 L163.338272 653.968933 L161.751892 655.9812 L160.012482 657.8629 L158.130829 659.6023 L156.118484 661.1887 L153.987869 662.6123 L151.752136 663.864441 L149.425064 664.9372 L147.021 665.8241 L144.554749 666.519653 L142.04155 667.0196 L139.496841 667.3208 L136.936371 667.4214 L128 667.4214 L80.7981 667.4214 L72.5 656 L80.7981 644.5786 L128 644.5786 L136.936371 644.5786 L137.704636 644.548462 L138.468155 644.458069 L139.222229 644.3081 L139.962219 644.099365 L140.683548 643.8333 L141.381775 643.5114 L142.0526 643.135742 L142.691879 642.7086 L143.295654 642.232544 L143.86026 641.7107 L144.382141 641.1461 L144.858139 640.5423 L145.285278 639.903 L145.660965 639.232239 L145.982849 638.534 L146.248962 637.8126 L146.457672 637.0727 L146.607651 636.3186 L146.698013 635.555054 L146.72821 634.7868 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="66" class="label">
          <tspan x="16.0000019" y="667">28.0 %</tspan>
        </text>
      </g>
      <g id="67" class="processContainer">
        <text font-size="9pt" fill="rgb(36,80,0)" id="68" class="label">
          <tspan x="520" y="739">Rolling Friction</tspan>
        </text>
      </g>
      <g id="69" class="processContainer">
        <text font-size="9pt" fill="rgb(36,80,0)" id="70" class="label">
          <tspan x="616" y="739">Air Drag</tspan>
        </text>
      </g>
      <g id="71" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="131_0" class="flow" stroke="none" d="M440.5 696.0106 L440.5 692.412842 L538.7868 692.412842 L540.5923 692.483765 L542.3867 692.696167 L544.1589 693.0487 L545.897949 693.5392 L547.59314 694.164551 L549.2341 694.921 L550.810547 695.8039 L552.313 696.807739 L553.731934 697.926453 L555.0588 699.152954 L556.2853 700.4798 L557.404 701.898743 L558.407837 703.4012 L559.2907 704.977661 L560.0472 706.6186 L560.672546 708.3138 L561.163 710.052856 L561.515564 711.825 L561.727966 713.619446 L561.7989 715.4249 L561.7989 712 L561.7989 726.193054 L560 727.5 L558.2011 726.193054 L558.2011 712 L558.2011 715.4249 L558.1413 713.9017 L557.9621 712.3879 L557.664734 710.8927 L557.2509 709.4256 L556.7233 707.9954 L556.085144 706.610962 L555.3402 705.280945 L554.493347 704.0135 L553.549561 702.816345 L552.514832 701.6969 L551.3954 700.6622 L550.198242 699.7184 L548.9308 698.8715 L547.600769 698.1266 L546.2163 697.4884 L544.786133 696.9608 L543.319031 696.547 L541.823853 696.249634 L540.310059 696.070435 L538.7868 696.0106 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="72" class="label">
          <tspan x="520" y="755">9.0 %</tspan>
        </text>
      </g>
      <g id="73" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="132_0" class="flow" stroke="none" d="M440.5 692.412842 L440.5 688.815063 L618.7868 688.815063 L620.5923 688.886 L622.3867 689.0984 L624.1589 689.4509 L625.897949 689.9414 L627.59314 690.5668 L629.2341 691.323242 L630.810547 692.2061 L632.313 693.209961 L633.731934 694.3287 L635.0588 695.5552 L636.2853 696.882 L637.404 698.300964 L638.407837 699.8034 L639.2907 701.3799 L640.0472 703.0208 L640.672546 704.716 L641.163 706.4551 L641.515564 708.227234 L641.727966 710.021667 L641.7989 711.827148 L641.7989 712 L641.7989 726.193054 L640 727.5 L638.2011 726.193054 L638.2011 712 L638.2011 711.827148 L638.1413 710.3039 L637.9621 708.7901 L637.664734 707.2949 L637.2509 705.8278 L636.7233 704.397644 L636.085144 703.0132 L635.3402 701.683167 L634.493347 700.4157 L633.549561 699.218567 L632.514832 698.0991 L631.3954 697.0644 L630.198242 696.1206 L628.9308 695.273743 L627.600769 694.5288 L626.2163 693.8906 L624.786133 693.363037 L623.319031 692.9492 L621.823853 692.651855 L620.310059 692.472656 L618.7868 692.412842 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="74" class="label">
          <tspan x="616" y="755">9.0 %</tspan>
        </text>
      </g>
      <g id="75" class="processContainer">
        <text font-size="9pt" fill="rgb(36,80,0)" id="76" class="label">
          <tspan x="696" y="483">Braking Losses</tspan>
        </text>
      </g>
      <g id="77" class="processContainer">
        <text font-size="9pt" fill="rgb(36,80,0)" id="78" class="label">
          <tspan x="688" y="347">Losses</tspan>
          <tspan x="688" y="360.582031">Power Train</tspan>
        </text>
      </g>
      <g id="79" class="processContainer">
        <text font-size="9pt" fill="rgb(36,80,0)" id="80" class="label">
          <tspan x="688" y="211">Aux.</tspan>
          <tspan x="688" y="224.582031">Consumers</tspan>
        </text>
      </g>
      <g id="81" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="151_0" class="flow" stroke="none" d="M632.815 519.5 L631.175964 519.5 L631.175964 503.609558 L631.2155 502.163483 L631.334167 500.721771 L631.5315 499.288666 L631.8068 497.86853 L632.1595 496.465546 L632.5883 495.083984 L633.092041 493.7279 L633.66925 492.401459 L634.3181 491.108551 L635.036743 489.853058 L635.822937 488.638733 L636.674438 487.469238 L637.588562 486.348083 L638.5627 485.2786 L639.59375 484.263977 L640.678833 483.307281 L641.814636 482.411377 L642.997742 481.578949 L644.2246 480.812439 L645.4915 480.1142 L640.8343 482.517181 L641.472534 482.197449 L642.118164 481.892975 L642.771 481.603973 L643.430359 481.3306 L644.0962 481.073 L644.7678 480.83136 L645.4451 480.605774 L646.1276 480.396362 L646.8148 480.203278 L647.5065 480.0266 L648.202148 479.866455 L648.9014 479.722931 L649.603943 479.5961 L650.309265 479.486 L651.016968 479.392761 L651.726746 479.3164 L652.438049 479.256958 L653.1507 479.214478 L653.8641 479.188965 L654.5779 479.1805 L682.545349 479.1805 L682.545349 473.1805 L687.5 480 L682.545349 486.8195 L682.545349 480.8195 L654.5779 480.8195 L653.903137 480.8275 L653.2287 480.851624 L652.5551 480.891785 L651.8826 480.948 L651.2117 481.020142 L650.542664 481.1083 L649.8759 481.212372 L649.211853 481.332245 L648.5508 481.467957 L647.8932 481.619324 L647.2394 481.786346 L646.589661 481.968872 L645.9445 482.1668 L645.3043 482.380066 L644.6693 482.608521 L644.04 482.85202 L643.4166 483.110443 L642.799561 483.383636 L642.1892 483.671448 L641.5859 483.973724 L646.2431 481.57074 L645.0547 482.2257 L643.9039 482.944672 L642.7941 483.725525 L641.72876 484.5659 L640.710938 485.463257 L639.7437 486.415 L638.83 487.418152 L637.972534 488.469849 L637.1739 489.566833 L636.4364 490.705841 L635.7623 491.8835 L635.153748 493.096283 L634.6123 494.3405 L634.1397 495.6125 L633.7375 496.908417 L633.4067 498.224426 L633.148438 499.556549 L632.9633 500.9008 L632.8521 502.253143 L632.815 503.609558 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="82" class="label">
          <tspan x="696" y="499">5.0 %</tspan>
        </text>
      </g>
      <g id="83" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="152_0" class="flow" stroke="none" d="M631.176 391.5 L626.8164 391.5 L626.8164 373.2132 L626.8885 371.3778 L627.1044 369.5537 L627.4627 367.7522 L627.961365 365.984344 L628.597046 364.261047 L629.366 362.593 L630.26355 360.9904 L631.284 359.4631 L632.421265 358.02066 L633.668 356.6718 L635.016846 355.425 L636.459351 354.287842 L637.9866 353.267365 L639.5892 352.369873 L641.2573 351.60083 L642.9806 350.9651 L644.7484 350.466522 L646.5499 350.1082 L648.374 349.892273 L650.2094 349.82016 L656 349.82016 L677.91626 349.82016 L679.5 352 L677.91626 354.17984 L656 354.17984 L650.2094 354.17984 L648.716064 354.238525 L647.231934 354.414154 L645.7661 354.705719 L644.327759 355.1114 L642.925659 355.628662 L641.5684 356.254333 L640.2645 356.9846 L639.021851 357.81488 L637.848267 358.7401 L636.7508 359.754578 L635.7363 360.85202 L634.8111 362.025665 L633.980835 363.26828 L633.250549 364.572235 L632.6249 365.929443 L632.1076 367.331573 L631.701965 368.769958 L631.4104 370.235718 L631.2347 371.719849 L631.176 373.2132 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="84" class="label">
          <tspan x="688" y="379">14.0 %</tspan>
        </text>
      </g>
      <g id="85" class="arrowContainer">
        <g class="arrowShape">
          <path fill="#4FB05A" opacity="1" id="153_0" class="flow" stroke="none" d="M626.816345 279.5 L625.745056 279.5 L625.745056 245.213211 L625.812134 243.506821 L626.0129 241.810944 L626.346 240.136063 L626.8096 238.492462 L627.4006 236.8903 L628.11554 235.339462 L628.95 233.849487 L629.8987 232.429581 L630.955933 231.088486 L632.1152 229.834473 L633.3692 228.675278 L634.710266 227.618042 L636.1302 226.6693 L637.6201 225.834869 L639.170959 225.119919 L640.773132 224.528854 L642.4167 224.0653 L644.0916 223.732147 L645.7875 223.531433 L647.4939 223.464386 L656 223.464386 L674.7516 223.464386 L674.7516 217.464386 L679.5 224 L674.7516 230.535614 L674.7516 224.535614 L656 224.535614 L647.4939 224.535614 L645.8716 224.599365 L644.2592 224.790192 L642.6668 225.106934 L641.1042 225.547653 L639.5809 226.1096 L638.106445 226.789337 L636.6899 227.582657 L635.3399 228.48468 L634.0649 229.489853 L632.8726 230.591949 L631.7705 231.7842 L630.7654 233.059219 L629.863342 234.40921 L629.07 235.82579 L628.3903 237.300247 L627.828369 238.823486 L627.387634 240.386124 L627.070862 241.978516 L626.88 243.590866 L626.816345 245.213211 Z" />
        </g>
        <text font-size="9pt" fill="rgb(178,34,34)" id="86" class="label">
          <tspan x="688" y="243">4.0 %</tspan>
        </text>
      </g>
      <text font-size="9pt" fill="rgb(255,255,255)" id="87" class="label">
        <tspan x="520" y="155">Recuperation</tspan>
      </text>
      <text font-size="18pt" font-weight="bold" fill="rgb(0,0,0)" id="88" class="label">
        <tspan x="16" y="-90">Electric Vehicle Energy Cycle</tspan>
      </text>
      <text font-size="8.25pt" fill="rgb(0,0,0)" id="89" class="label">
        <tspan x="16" y="-70">using fictitious values, Live Link to Excel to feed values, custom</tspan>
        <tspan x="16" y="-57.5498047">flow content label with percentage (in relation to source node)</tspan>
        <tspan x="16" y="-45.09961">Diagram provided by Phineas / sankey-diagrams.com</tspan>
      </text>
    </g>
    <g id="SvgToolTip" display="none" opacity="0">
      <filter id="boxShadow" width="150%" height="150%">
        <feGaussianBlur in="SourceAlpha" stdDeviation="3" result="blurEffect" />
        <feOffset dx="2" dy="4" in="blurEffect" result="movedBlurEffect" />
        <feMerge>
          <feMergeNode in="movedBlurEffect" />
          <feMergeNode in="SourceGraphic" />
        </feMerge>
      </filter>
      <rect id="SvgToolTipBackground" width="0" height="0" rx="5" ry="5" style="filter: url(#boxShadow);fill: rgb(238, 238, 238); opacity: 0.8; stroke: rgb(33, 33, 33);" />
      <g id="SvgToolTipText" />
    </g>
    <g id="SvgSupplementContent">
      <foreignObject id="SvgSupplementHtmlContainer" width="100%" height="100%" x="-1" y="-700" style="display: none;">
        <!-- The Modal -->
<body id="SvgSupplementTextWrapper" xmlns="http://www.w3.org/1999/xhtml">
  <!-- Modal content -->
  <div class="modal-content">
    <span class="close">×</span>
    <div id="SvgSupplementTextContainer">
	<!-- 
	JavaScript writes supplement texts in here by referencing the id. Do not change it 
	-->
	</div>
  </div>
</body>

<style xmlns="http://www.w3.org/2000/svg">
#SvgSupplementTextWrapper {
  margin: 0;
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgb(0,0,0);
  background-color: rgba(0,0,0,0.4);
}

#SvgSupplementTextWrapper .modal-content {
  background-color: #fefefe;
  margin: 5% auto;
  padding: 32px;
  border: 1px solid #888;
  width: 80%;
}

#SvgSupplementTextWrapper .close {
  color: #aaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

#SvgSupplementTextWrapper .close:hover,
#SvgSupplementTextWrapper .close:focus {
  color: black;
  text-decoration: none;
  cursor: pointer;
}body {
    font-family: Verdana;
    font-size: 11px;
    color: #555555;
    letter-spacing: .25px;
}
h1 {
    font-size: 16px;
    font-weight: normal;
    color: #4477bb;
    margin: 12px 0 8px;
    padding-top: 8px;
    letter-spacing: 1.4px;
    border-bottom: solid 1px #4477BB;
}
h2 {
    font-size: 13px;
    font-weight: normal;
    letter-spacing: 0.6px;
    text-decoration: none;
    color: #4477bb;
    border-bottom: solid 1px #dddddd;
    margin: 8px 0 8px;
    padding-top: 8px;
}
h3 {
    font-size: 11px;
    font-weight: normal;
    letter-spacing: 0.6px;
    text-decoration: none;
    color: #4477bb;
    margin: 8px 0 8px;
    padding-top: 8px;
}
div, p, blockquote {
    margin: 0 0 8px;
    line-height: 1.2;
}
ol, ul {
    margin-top: 0px;
    margin-bottom: 12px;
}
a {
    color: #4477BB;
    font-style: normal;
}
blockquote, pre,code {
    color: #444444;
    background-color: #eeeeee;
}
blockquote {
    font-style: italic;
    border-left: 8px solid #4477bb;
    margin-left: 16px;
    margin-right: 32px;
    padding: 8px 8px 2px 8px;
    letter-spacing: 1px;
    line-height: 1.5;
}
pre {
    font-family: Menlo, Monaco, Consolas, monospace;
    padding: 2px 2px 2px 2px;
    line-height: 1.25;
    overflow-x: scroll;
}
</style></foreignObject>
    </g>
  </g>
  <script>var Svg_activeScripts = ["Core","ToolTips","Supplements","ZoomAndMove","Highlighting"];
var Svg_tooltips = {"":[{"title":"Battery"},{"caption":"Balance (Energy)"},{"section":{"text":"Input","quantity":"100","unit":"kW"}},{"flow":{"entry":"Energy","quantity":"76.5","unit":"kW","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"23.5","unit":"kW","color":"rgba(79,176,90,1)"}},{"section":{"text":"Output","quantity":"100","unit":"kW"}},{"flow":{"entry":"Energy","quantity":"98.5","unit":"kW","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"1","unit":"kW","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"0.5","unit":"kW","color":"rgba(79,176,90,1)"}}],"2":[{"title":"Battery"},{"caption":"Balance (Energy)"},{"section":{"text":"Input","quantity":"98.5","unit":"kW"}},{"flow":{"entry":"Energy","quantity":"98.5","unit":"kW","color":"rgba(79,176,90,1)"}},{"section":{"text":"Output","quantity":"98.5","unit":"kW"}},{"flow":{"entry":"Energy","quantity":"96.5","unit":"kW","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"2","unit":"kW","color":"rgba(79,176,90,1)"}}],"4":[{"title":"Electr. Energy"},{"caption":"Balance (Energy)"},{"section":{"text":"Input","quantity":"96.5","unit":"kW"}},{"flow":{"entry":"Energy","quantity":"96.5","unit":"kW","color":"rgba(79,176,90,1)"}},{"section":{"text":"Output","quantity":"96.5","unit":"kW"}},{"flow":{"entry":"Energy","quantity":"90.7","unit":"kW","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"5.8","unit":"kW","color":"rgba(79,176,90,1)"}}],"6":[{"title":"Power Train"},{"caption":"Balance (Energy)"},{"section":{"text":"Input","quantity":"90.7","unit":"kW"}},{"flow":{"entry":"Energy","quantity":"90.7","unit":"kW","color":"rgba(79,176,90,1)"}},{"section":{"text":"Output","quantity":"90.7","unit":"kW"}},{"flow":{"entry":"Energy","quantity":"74.5","unit":"kW","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"16.3","unit":"kW","color":"rgba(79,176,90,1)"}}],"8":[{"title":"Wheel"},{"caption":"Balance (Energy)"},{"section":{"text":"Input","quantity":"74.5","unit":"kW"}},{"flow":{"entry":"Energy","quantity":"74.5","unit":"kW","color":"rgba(79,176,90,1)"}},{"section":{"text":"Output","quantity":"74.5","unit":"kW"}},{"flow":{"entry":"Energy","quantity":"36.5","unit":"kW","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"17.1","unit":"kW","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"20.8","unit":"kW","color":"rgba(79,176,90,1)"}}],"11":[{"title":"Electric"},{"caption":"Balance (Energy)"},{"section":{"text":"Input","quantity":"24.5","unit":"kW"}},{"flow":{"entry":"Energy","quantity":"24.5","unit":"kW","color":"rgba(79,176,90,1)"}},{"section":{"text":"Output","quantity":"24.5","unit":"kW"}},{"flow":{"entry":"Energy","quantity":"23.5","unit":"kW","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"1","unit":"kW","color":"rgba(79,176,90,1)"}}],"13":[{"flow":{"entry":"Energy","quantity":"76.5","unit":"kW","color":"rgba(79,176,90,1)"}}],"15":[{"flow":{"entry":"Energy","quantity":"98.5","unit":"kW","color":"rgba(79,176,90,1)"}}],"17":[{"flow":{"entry":"Energy","quantity":"96.5","unit":"kW","color":"rgba(79,176,90,1)"}}],"19":[{"flow":{"entry":"Energy","quantity":"90.7","unit":"kW","color":"rgba(79,176,90,1)"}}],"21":[{"flow":{"entry":"Energy","quantity":"74.5","unit":"kW","color":"rgba(79,176,90,1)"}}],"23":[{"title":"Kinetic"},{"caption":"Balance (Energy)"},{"section":{"text":"Input","quantity":"36.5","unit":"kW"}},{"flow":{"entry":"Energy","quantity":"36.5","unit":"kW","color":"rgba(79,176,90,1)"}},{"section":{"text":"Output","quantity":"36.5","unit":"kW"}},{"flow":{"entry":"Energy","quantity":"30","unit":"kW","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"3.3","unit":"kW","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"3.3","unit":"kW","color":"rgba(79,176,90,1)"}}],"25":[{"flow":{"entry":"Energy","quantity":"36.5","unit":"kW","color":"rgba(79,176,90,1)"}}],"27":[{"title":"Wheel"},{"caption":"Balance (Energy)"},{"section":{"text":"Input","quantity":"30","unit":"kW"}},{"flow":{"entry":"Energy","quantity":"30","unit":"kW","color":"rgba(79,176,90,1)"}},{"section":{"text":"Output","quantity":"30","unit":"kW"}},{"flow":{"entry":"Energy","quantity":"28.5","unit":"kW","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"1.5","unit":"kW","color":"rgba(79,176,90,1)"}}],"29":[{"title":"Power"},{"caption":"Balance (Energy)"},{"section":{"text":"Input","quantity":"28.5","unit":"kW"}},{"flow":{"entry":"Energy","quantity":"28.5","unit":"kW","color":"rgba(79,176,90,1)"}},{"section":{"text":"Output","quantity":"28.5","unit":"kW"}},{"flow":{"entry":"Energy","quantity":"24.5","unit":"kW","color":"rgba(79,176,90,1)"}},{"flow":{"entry":"Energy","quantity":"4","unit":"kW","color":"rgba(79,176,90,1)"}}],"31":[{"flow":{"entry":"Energy","quantity":"30","unit":"kW","color":"rgba(79,176,90,1)"}}],"33":[{"flow":{"entry":"Energy","quantity":"28.5","unit":"kW","color":"rgba(79,176,90,1)"}}],"35":[{"flow":{"entry":"Energy","quantity":"24.5","unit":"kW","color":"rgba(79,176,90,1)"}}],"37":[{"flow":{"entry":"Energy","quantity":"23.5","unit":"kW","color":"rgba(79,176,90,1)"}}],"41":[{"flow":{"entry":"Energy","quantity":"1","unit":"kW","color":"rgba(79,176,90,1)"}}],"45":[{"flow":{"entry":"Energy","quantity":"0.5","unit":"kW","color":"rgba(79,176,90,1)"}}],"49":[{"flow":{"entry":"Energy","quantity":"2","unit":"kW","color":"rgba(79,176,90,1)"}}],"53":[{"flow":{"entry":"Energy","quantity":"5.8","unit":"kW","color":"rgba(79,176,90,1)"}}],"57":[{"flow":{"entry":"Energy","quantity":"16.3","unit":"kW","color":"rgba(79,176,90,1)"}}],"63":[{"flow":{"entry":"Energy","quantity":"17.1","unit":"kW","color":"rgba(79,176,90,1)"}}],"65":[{"flow":{"entry":"Energy","quantity":"20.8","unit":"kW","color":"rgba(79,176,90,1)"}}],"71":[{"flow":{"entry":"Energy","quantity":"3.3","unit":"kW","color":"rgba(79,176,90,1)"}}],"73":[{"flow":{"entry":"Energy","quantity":"3.3","unit":"kW","color":"rgba(79,176,90,1)"}}],"81":[{"flow":{"entry":"Energy","quantity":"1.5","unit":"kW","color":"rgba(79,176,90,1)"}}],"83":[{"flow":{"entry":"Energy","quantity":"4","unit":"kW","color":"rgba(79,176,90,1)"}}],"85":[{"flow":{"entry":"Energy","quantity":"1","unit":"kW","color":"rgba(79,176,90,1)"}}]};
var Svg_highlighting = {"entries":{"Energy":["42_0","43_0","44_0","45_0","46_0","53_0","66_0","67_0","68_0","69_0","76_0","83_0","90_0","97_0","104_0","117_0","118_0","131_0","132_0","151_0","152_0","153_0"]},"connections":{"":{"in":["13","37"],"out":["15","41","45"]},"2":{"in":["15"],"out":["17","49"]},"4":{"in":["17"],"out":["19","53"]},"6":{"in":["19"],"out":["21","57"]},"8":{"in":["21"],"out":["25","63","65"]},"10":{"in":[],"out":["13"]},"11":{"in":["35"],"out":["37","85"]},"23":{"in":["25"],"out":["31","71","73"]},"27":{"in":["31"],"out":["33","81"]},"29":{"in":["33"],"out":["35","83"]},"39":{"in":["41"],"out":[]},"43":{"in":["45"],"out":[]},"47":{"in":["49"],"out":[]},"51":{"in":["53"],"out":[]},"55":{"in":["57"],"out":[]},"59":{"in":["63"],"out":[]},"61":{"in":["65"],"out":[]},"67":{"in":["71"],"out":[]},"69":{"in":["73"],"out":[]},"75":{"in":["81"],"out":[]},"77":{"in":["83"],"out":[]},"79":{"in":["85"],"out":[]}}};
var Svg_supplements = {};
</script>
  <script>// Core

window.addEventListener("onload", Svg_Initialize());

function Svg_Initialize() {
  if (document.readyState !== "complete") {
    setTimeout(function () {
      Svg_Initialize();
    }, 200);
  } else {
    SvgCore.SvgSankey.el = document.getElementById("SvgSankey");
    if (SvgCore.SvgSankey.el) {
      Svg_activeScripts.forEach(function (activeScript) {
        var initFunc = "Svg" + activeScript + "_Initialize"
        if (typeof window[initFunc] === "function") {
          window[initFunc]()
        }
      });
    }
  }
}

var SvgCore = {
  SvgSankey: {el: null},
  SvgWrapper: {
    el: null,
    bbox: null,
    boundingClientRect: null,
    viewBox: null
  },
  SvgContainer: {
    el: null,
    bbox: null,
    boundingClientRect: null,
    viewBox: null
  },
  toolTip: null,
  toolTipTimer: null,
  toolTipLastTarget: null,
  ttBoxSpaceToBorder: 5,
  ttBoxPadding: 5,
  ttTextSpaceBottom: 5,
  ttTextSpaceRight: 15,
  ttTextSpaceLeftOnRightAlign: 3,
  ttTextIcon: "\u25A0",
  colors: {
    warning: "#C00020",
    info: "#808080"
  },
  blurRect: null,
  scale: {}
}

function SvgCore_initViewBoxAndBounds() {
  SvgCore.SvgWrapper.el = document.getElementsByTagName("svg")[0]
  SvgCore.SvgWrapper.bbox = SvgCore.SvgWrapper.el.getBBox()
  SvgCore.SvgWrapper.boundingClientRect = SvgCore.SvgWrapper.el.getBoundingClientRect()
  SvgCore.SvgWrapper.viewBox = SvgCore.SvgWrapper.el.viewBox &amp;&amp; SvgCore.SvgWrapper.el.viewBox.baseVal
  SvgCore.SvgContainer.el = document.getElementById("SvgObjects")
  SvgCore.SvgContainer.bbox = SvgCore.SvgContainer.el.getBBox()
  SvgCore.SvgContainer.boundingClientRect = SvgCore.SvgContainer.el.getBoundingClientRect()
  SvgCore.SvgContainer.viewBox = SvgCore.SvgContainer.el.viewBox &amp;&amp; SvgCore.SvgContainer.el.viewBox.baseVal
  SvgCore.blurRect = document.getElementById("ttBlurFilter")
  SvgCore.scale = {
    width: SvgCore.SvgWrapper.el.getScreenCTM().a,
    height: SvgCore.SvgWrapper.el.getScreenCTM().d
  };
}

function SvgCore_Initialize() {
  SvgCore_Polyfill.forEach(function(polyfillFunc){polyfillFunc()})
  SvgCore_initViewBoxAndBounds()

  window.addEventListener('resize', function () {
    SvgCore_initViewBoxAndBounds()
  })
}

function SvgCore_getMouseCoords(absX, absY, target) {
  var pnt1 = SvgCore.SvgWrapper.el.createSVGPoint();
  pnt1.x = absX; pnt1.y = absY;
  var svgCTM = SvgCore.SvgContainer.el.getCTM();
  var pnt2 = pnt1.matrixTransform(svgCTM.inverse());
  return pnt2;
}

var SvgCore_Polyfill = [
  function(){
    var property = "classList"
    if (!Object.getOwnPropertyDescriptor(Element.prototype, property)) {
      console.log("SvgInfo: Adding Polyfill for Element."+property)
      if (HTMLElement &amp;&amp; Object.getOwnPropertyDescriptor(HTMLElement.prototype, property)) {
        Object.defineProperty(Element.prototype, property, Object.getOwnPropertyDescriptor(HTMLElement.prototype, property));
      }
    }},
  function(){
    var method = "getElementsByClassName"
    if (Element.prototype[method] === undefined) {
      console.log("SvgInfo: Adding Polyfill for Element.getElementsByClassName")
      Element.prototype[method] = HTMLElement.prototype[method];
    }},
  function(){
    var property = "contains"
    if (!Object.getOwnPropertyDescriptor(Element.prototype, property)) {
      if (HTMLElement &amp;&amp; Object.getOwnPropertyDescriptor(HTMLElement.prototype, property)) {
        console.log("SvgInfo: Adding Polyfill for Element."+property)
        Object.defineProperty(Element.prototype, property, Object.getOwnPropertyDescriptor(HTMLElement.prototype, property));
      }
    }
  },
];

function SvgCore_CollectionToArray(collection){
  var arr = [];
  if (!collection || !collection.length) return arr
  for (var indx = 0; indx &lt; collection.length; indx++){
    arr.push(collection[indx])
  }
  return arr
}

function SvgCore_getFirstRelevantElement(x, classes) {
  if (classes &amp;&amp; !Array.isArray(classes)) {
    classes = [classes];
  }
  if (x.nodeType !== 1 || classes.length &lt; 1) return;

  var elementInfo = {
    type: null,
    object: null
  };
  var whileContinue = true;
  while (whileContinue) {
    classes.forEach(function (classToCheck) {
      if (x.classList &amp;&amp; x.classList.contains(classToCheck)) {
        elementInfo.type = classToCheck;
        return true;
      }
      return false;
    });
    whileContinue = elementInfo.type ? false : x ? true : false;
    x = whileContinue ? x.parentNode : x;
  }
  elementInfo.object = elementInfo.type != null ? x : null;
  return elementInfo.object;
}

function SvgCore_findAll(node, selector) {
  removeId = false

  if (node.getAttribute('id') === null) {
      node.setAttribute('id', 'ID_' + new Date().getTime())
      removeId = true
  }
  let result = document.querySelectorAll('#' + node.getAttribute('id') + ' &gt; ' + selector)
  if (removeId)
      node.removeAttribute('id')
  return result
}
// ToolTips

function SvgToolTips_Initialize() {
  console.log("Initializing SvgToolTips")
  SvgTT_initMarkers()
  SvgTT_initListeners()
}
var SvgTT_dataBlock = Svg_tooltips;
function SvgTT_initMarkers() {
  document.getElementById("SvgSankey").style.filter = "url(#ttBlur)";
}

function SvgTT_initListeners() {
  var interactables = [].concat(
    SvgCore_CollectionToArray(SvgCore.SvgSankey.el.getElementsByClassName("flow")).filter(function(el) {
      return SvgTT_toolTipExists(SvgCore_getFirstRelevantElement(el, "arrowContainer"))
    }),
    SvgCore_CollectionToArray(SvgCore.SvgSankey.el.getElementsByClassName("processContainer")).filter(SvgTT_toolTipExists)
  )
  interactables.forEach(function (el) {
    el.addEventListener("mouseenter", SvgTT_SvgMouseEnter, false);
    el.addEventListener("mouseleave", SvgTT_SvgMouseLeave, false);
  })
  function SvgTT_toolTipExists(element) {
    return SvgTT_dataBlock[element.id] &amp;&amp; true
  }
}

function SvgTT_SvgMouseEnter(e) {
  SvgTT_showTT(e);
}

function SvgTT_SvgMouseLeave(e) {
  if ((SvgCore.toolTipLastTarget &amp;&amp; SvgCore.toolTipLastTarget.contains(e.toElement)) || (SvgCore.toolTip &amp;&amp; (e.toElement === SvgCore.toolTip || SvgCore.toolTip.contains(e.toElement)))) {
    SvgCore.toolTip.addEventListener("mouseleave", SvgTT_SvgMouseLeave, false);
    return;
  }
  SvgTT_TTHide(e);
}

function SvgTT_cleanTT(ttContainer) {
  while (ttContainer.firstChild) {
    ttContainer.removeChild(ttContainer.firstChild);
  }
}

function SvgTT_showTT(e) {
  var posiX = 0;
  var posiY = 0;
  SvgCore.toolTip = document.getElementById("SvgToolTip");
  if (SvgCore.toolTip !== null) {
    SvgCore.toolTip.setAttribute("display", "inherit");
    var ttBackground = document.getElementById("SvgToolTipBackground");
    var ttText = document.getElementById("SvgToolTipText");
    SvgTT_cleanTT(ttText)
    SvgTT_buildTT(ttText, e.currentTarget);
    if ((ttText !== null) &amp;&amp; (SvgCore.toolTipLastTarget !== e.currentTarget)) {
      var scale =  SvgCore.scale 
      scale = Math.min(scale.width, scale.height);
      var ttTextBBox = ttText.getBBox()
      var boxPadding = 5;
      var ttWidth = ttTextBBox.width + 2 * boxPadding;
      var ttHeight = ttTextBBox.height + 2 * boxPadding;
      ttBackground.setAttribute("x", ttTextBBox.x - boxPadding || 0);
      ttBackground.setAttribute("y", ttTextBBox.y - boxPadding || 0);
      ttBackground.setAttribute("width", ttWidth || 1);
      ttBackground.setAttribute("height", ttHeight || 1);
      var textSizeAndPaddingX = (boxPadding - ttTextBBox.x)
      var textSizeAndPaddingY = (boxPadding - ttTextBBox.y)
      
      var posiToMoveTo = SvgCore_getMouseCoords(e.pageX, e.pageY, e.currentTarget);
      posiX = posiToMoveTo.x + textSizeAndPaddingX || 0;
      posiY = posiToMoveTo.y + textSizeAndPaddingY || 0;

      var rightBorder = SvgCore.SvgContainer.bbox.width + SvgCore.SvgContainer.bbox.x
      var remainingTTWidthToShow = ttWidth - boxPadding + ttTextBBox.x
      var effectiveNeededWidth = remainingTTWidthToShow  + posiX + SvgCore.ttBoxSpaceToBorder
      if (effectiveNeededWidth &gt; rightBorder) {
        posiX = posiX - (effectiveNeededWidth - rightBorder);
      }
      var bottomBorder = SvgCore.SvgContainer.bbox.height + SvgCore.SvgContainer.bbox.y
      var remainingTTHeightToShow = ttHeight - boxPadding + ttTextBBox.y
      var effectiveNeededHeight = remainingTTHeightToShow  + posiY + SvgCore.ttBoxSpaceToBorder
      if (effectiveNeededHeight &gt; bottomBorder) {
        posiY = posiY - (effectiveNeededHeight - bottomBorder)
      }
      SvgCore.toolTip.setAttribute("transform", "translate(" + (posiX) + ", " + (posiY) + ") scale(" + 1 + " " + 1 + ")");
      SvgCore.toolTipLastTarget = e.currentTarget;
      if (SvgCore.blurRect) {
        var blurRect = SvgCore.blurRect;
        var blurPosi = {
          x: posiX - textSizeAndPaddingX,
          y: posiY - textSizeAndPaddingY
        }
        var blurSize = {
          x: ttWidth ,
          y: ttHeight 
        }
    }
    var delay = 400;
    if (SvgCore.blurRect){
      SvgCore.toolTipBlurTimer = setTimeout(function() {
      blurRect.setAttribute("x",blurPosi.x)
      blurRect.setAttribute("y",blurPosi.y)
      blurRect.setAttribute("width",blurSize.x || 1)
      blurRect.setAttribute("height",blurSize.y || 1)
        }, delay + 100)
    }
      SvgCore.toolTipTimer = setTimeout(function() {
        ttBackground.style.opacity = 0.8;
        SvgCore.toolTip.style.transition = "opacity 1s linear"
        SvgCore.toolTip.style.opacity = 1;
        SvgTT_TTTimeout()
      }, delay + 50);
    }
  }
}

function SvgTT_TTTimeout() {
  var tt = SvgCore.toolTip;
  if (tt) {
    tt.setAttribute("display", "inherit");
  }
}

function SvgTT_TTHide() {
  if (SvgCore.toolTipBlurTimer !== null) clearTimeout(SvgCore.toolTipBlurTimer);
  if (SvgCore.toolTipTimer !== null) clearTimeout(SvgCore.toolTipTimer);
  SvgCore.toolTipLastTarget = null;
  var tt = SvgCore.toolTip;
  if (tt) {
    var ttBackground = document.getElementById("SvgToolTipBackground");
    tt.style.transition = "opacity 0.1s linear"
    ttBackground.style.opacity = 1;
    tt.style.opacity = 0;
    tt.setAttribute("display", "none");
    if (SvgCore.blurRect) {
        SvgCore.blurRect.setAttribute("x", 0)
        SvgCore.blurRect.setAttribute("y", 0)
        SvgCore.blurRect.setAttribute("width", 1 )
        SvgCore.blurRect.setAttribute("height", 1)
      }
  }
}

function SvgTT_buildTT(textContainer, elementToAnalyzeInput) {
  var container = textContainer;
  var elementToAnalyze = elementToAnalyzeInput;
  var elementWriter = SvgTT_SvgElementWriter;

  var methods = {
    addDataAsElements: function (element) {
      if (element.nodeType !== 1) return;
      var parentElement = element;
      var currentElement = element;
      var nodesLeft = true;
      while (nodesLeft) {
        var functionToCall = methods.choseFittingFunction(currentElement);
        if (functionToCall !== null &amp;&amp; typeof methods[functionToCall] === "function") {
          methods[functionToCall](currentElement);
        }
        currentElement = methods.getNextSiblingOrChild(parentElement, currentElement);
        nodesLeft = !!currentElement;
      }
    },
    choseFittingFunction: function (element) {
      if (element.nodeType === 1 &amp;&amp; element.classList.contains("processContainer")) return "process";
      if (element.nodeType === 1 &amp;&amp; element.classList.contains("flow")) return "arrow";
      if (element.nodeType === 1 &amp;&amp; element.classList.contains("flow")) return "flow";
      return null;
    },
    getNextSiblingOrChild: function (parentElement, currentElement) {
      var parentOrSibling = currentElement;
      if (!parentOrSibling.nextSibling) return null;
      return parentOrSibling.nextSibling.parentNode === parentElement ? currentElement.nextSibling : currentElement.firstChild;
    },
    writeAndAppendToolTipEntry: function (toolTipEntry) {
      var toolTipType = Object.keys(toolTipEntry)[0];
      if (toolTipType !== null &amp;&amp; typeof elementWriter[toolTipType] === "function") {
        var elementToAppend = elementWriter[toolTipType](toolTipEntry);
        container.appendChild(elementToAppend);
      }
    },
    arrow: function(flowElement){
      var arrowContainer = SvgCore_getFirstRelevantElement(flowElement, "arrowContainer")
      var ownId = 0;
      SvgCore_CollectionToArray(arrowContainer.getElementsByClassName("flow")).forEach(function(flowInArrow, index){
        if (flowInArrow == flowElement) ownId = index;
      })
      var toolTipEntries = SvgTT_dataBlock[arrowContainer.id]
      toolTipEntries.forEach(function (flowData, index){
        flowData.flow.textColor = index != ownId ? "#606060" : null;
        methods.writeAndAppendToolTipEntry(flowData);
      })
    },
    process: function (processElement) {
      var toolTipEntries = SvgTT_dataBlock[processElement.id];
      toolTipEntries.forEach(function (ttEntry) {
        methods.writeAndAppendToolTipEntry(ttEntry);
      });
    },
    applyOffsets: function (offsets, domObjToLayout) {
      domObjToLayout = domObjToLayout || container;
      var toolTipRows = SvgCore_CollectionToArray(domObjToLayout.childNodes)
      toolTipRows.forEach(function (row, rowIndex) {
        var rowElements = SvgCore_CollectionToArray(row.childNodes)
        var rowHeight = row.getBBox().height;
        var dist = Math.round(rowHeight / 3);
        rowElements.forEach(function (elementToMove, columnIndex) {
          if (elementToMove.hasAttribute("text-anchor") &amp;&amp; elementToMove.getAttribute("text-anchor") === "end") {
            elementToMove.setAttribute("x", offsets.x[rowIndex][columnIndex + 1] - dist);
          } else {
            var colIndex;
            if (elementToMove.hasAttribute("column-index")) {
              colIndex = elementToMove.getAttribute("data-offsetx");
              if (colIndex &lt; 0 &amp;&amp; colIndex &gt;= rowElements.lenght()) {
                colIndex = columnIndex;
              }
            } else {
              colIndex = columnIndex;
            }
            elementToMove.setAttribute("x", offsets.x[rowIndex][colIndex]);
          }
          elementToMove.setAttribute("y", offsets.y[rowIndex]);
        });
      });
    },

    getOffsets: function (domObjToLayout) {
      domObjToLayout = domObjToLayout || container;
      var paddingBottom = SvgCore.ttTextSpaceBottom;
      var elementsToGrid = [".flow", ".section", ".stock"];
      var gridIdentificationClass = "grid";

      var gridElements = []
      elementsToGrid.forEach(function (identifier) {
        gridElements = gridElements.concat(SvgCore_CollectionToArray(domObjToLayout.querySelectorAll(identifier)))
      })
      var gridWidths = [];
      gridElements.forEach(function (row) {
        row.classList.add(gridIdentificationClass);
        var rowElements = SvgCore_CollectionToArray(row.childNodes)
        rowElements.forEach(function (element, columnIndex) {
          gridWidths[columnIndex] = Math.max(gridWidths[columnIndex] || 0, element.getComputedTextLength());
        });
      });
      var nodesArr = SvgCore_CollectionToArray(domObjToLayout.childNodes);
      var offsetsY = [0];
      var offsetsX = [];
      nodesArr.forEach(function (row, rowIndex) {
        var rowHeight = row.getBBox().height;
        var dist = Math.round(rowHeight / 3);
        offsetsY[rowIndex + 1] = rowHeight + (offsetsY[rowIndex] || 0) + (rowIndex &gt; 0 ? paddingBottom : 0);
        var rowElements = SvgCore_CollectionToArray(row.childNodes)
        rowElements.forEach(function (element, columnIndex) {
          if (!offsetsX[rowIndex]) offsetsX.push([0]);
          var elWidth = row.classList.contains(gridIdentificationClass) ? gridWidths[columnIndex] : element.getComputedTextLength();
          offsetsX[rowIndex][columnIndex + 1] = elWidth + offsetsX[rowIndex][columnIndex] + dist;
        });
      });
      gridElements.forEach(function (el) {
        el.classList.remove(gridIdentificationClass)
      })
      offsetsY.shift() /* Removes the 0 so the first element gets y-shifted by its' own height. Needed for SVG-Text-Elements to achieve a decent 0/0 point*/
      return {
        y: offsetsY,
        x: offsetsX
      };
    }
  };
  methods.addDataAsElements(elementToAnalyze);
  var offsets = methods.getOffsets();
  methods.applyOffsets(offsets);
}

var SvgTT_SvgElementWriter = {
  createSvgElement: function (type, textcontent, classToAdd) {
    var element = document.createElementNS("http://www.w3.org/2000/svg", type);
    element.setAttribute("x", "0");
    element.setAttribute("y", "0");
    if (textcontent) element.textContent = textcontent;
    if (classToAdd) element.classList.add(classToAdd);
    return element;
  },

  title: function (inputObj) {
    var titleName = inputObj.title;
    var childElement = this.createSvgElement("text", "", Object.keys(inputObj)[0]);
    var titleTspan = this.createSvgElement("tspan", titleName);
    childElement.appendChild(titleTspan);
    titleTspan.classList.add("text");
    return childElement;
  },

  caption: function (inputObj) {
    var captionText = inputObj.caption;
    var childElement = this.createSvgElement("text", "", Object.keys(inputObj)[0]);
    var captionTspan = this.createSvgElement("tspan", captionText);
    childElement.appendChild(captionTspan);
    captionTspan.classList.add("text");
    return childElement;
  },

  section: function (inputObj) {
    var sectionData = inputObj.section;
    var childElement = this.createSvgElement("text", "", Object.keys(inputObj)[0]);
    var emptyTspan = this.createSvgElement("tspan", "");
    var textTspan = this.createSvgElement("tspan", sectionData.text);
    textTspan.setAttribute("column-index", "0");
    textTspan.classList.add("text");
    var quantityTspan = this.createSvgElement("tspan", sectionData.quantity);
    quantityTspan.classList.add("quantity");
    quantityTspan.setAttribute("text-anchor", "end");
    var unitTspan = this.createSvgElement("tspan", sectionData.unit);
    unitTspan.classList.add("unit");
    childElement.appendChild(emptyTspan);
    childElement.appendChild(textTspan);
    childElement.appendChild(quantityTspan);
    childElement.appendChild(unitTspan);
    return childElement;
  },

  flow: function (inputObj) {
    var flowData = inputObj.flow || inputObj.stock;
    var childElement = this.createSvgElement("text", "", Object.keys(inputObj)[0]);
    var entryIconTspan = this.createSvgElement("tspan", SvgCore.ttTextIcon);
    entryIconTspan.classList.add("icon");
    if (flowData.color) {
      entryIconTspan.style.fill = flowData.color;
    }
    var entryTextTspan = this.createSvgElement("tspan", flowData.entry);
    entryTextTspan.classList.add("text");
    entryTextTspan.setAttribute("font-size", "1em");
    var quantityTspan = this.createSvgElement("tspan", flowData.quantity);
    quantityTspan.classList.add("quantity");
    quantityTspan.setAttribute("text-anchor", "end");
    var unitTspan = this.createSvgElement("tspan", flowData.unit);
    unitTspan.classList.add("unit");
    childElement.appendChild(entryIconTspan);
    childElement.appendChild(entryTextTspan);
    childElement.appendChild(quantityTspan);
    childElement.appendChild(unitTspan);
    if (flowData.textColor) childElement.style.fill = flowData.textColor;
    return childElement;
  },

  stock: function (inputObj) {
    var childElement = SvgTT_SvgElementWriter.flow(inputObj);
    return childElement;
  },

  summary: function (inputObj) {
    var summaryData = inputObj.summary;
    var childElement = this.createSvgElement("text", "", Object.keys(inputObj)[0]);

    var textTspan = this.createSvgElement("tspan", summaryData.text);
    textTspan.classList.add("text");
    if (summaryData.type) {
      var summaryColor;
      switch (summaryData.type) {
        case "warning":
          summaryColor = SvgCore.colors.warning;
          break;
        case "info":
          summaryColor = SvgCore.colors.warning;
          break;
        default:
          summaryColor = SvgCore.colors.warning;
      }
      textTspan.style.fill = summaryColor;
    }
    childElement.appendChild(textTspan);
    return childElement;
  }
};

// Supplements

function SvgSupplements_Initialize() {
  console.log("Initializing SvgSupplements");
  SvgSupplements_initListeners();
  SvgSupplements_initObject();
};

function SvgSupplements_initListeners() {
  var interactables = Object.keys(Svg_supplements);
  interactables.forEach(function (id) {
    interactableElement = document.getElementById(id)
    interactableElement.addEventListener("dblclick", function (e) {
      if (e.ctrlKey === false &amp;&amp; e.which === 1) {
        e.stopPropagation();
        SvgSupplements_openSupplement(e);
      }
    }, false)
    interactableElement.classList.add("hasLink");
  })  
}

function SvgSupplements_initObject(){
  SvgSupplements.htmlContainer = document.getElementById("SvgSupplementHtmlContainer")
  SvgSupplements.textWrapper = document.getElementById("SvgSupplementTextWrapper");
  SvgSupplements.textContainer = document.getElementById("SvgSupplementTextContainer");

  var closeButton = SvgSupplements.htmlContainer &amp;&amp; SvgSupplements.htmlContainer.getElementsByClassName("close")[0]
  if (closeButton) {
    closeButton.addEventListener("click", function(){
      SvgSupplements.htmlContainer.style.display="none"
    });
  }
  if (SvgSupplements.textWrapper) SvgSupplements.textWrapper.addEventListener("click", function(e){
    if (e.target == SvgSupplements.textWrapper)
    {
      SvgSupplements.htmlContainer.style.display="none";
    }
  });
}

var regexAbsoultFilePath = "^([a-zA-Z]\\:|\\\\)\\\\([^\\\\:*?\"" + String.fromCharCode(60, 62) + "|]+\\\\)*[^\\\\:*?\"" + String.fromCharCode(60, 62) + "|]+$";

var SvgSupplements = {
  htmlContainer: null,
  textWrapper: null,
  textContainer: null,
  urlRegExHelper: /:\/?\/\/[a-z1-9]*/,
  fileRegExHelper: new RegExp(regexAbsoultFilePath)
}

function SvgSupplements_openSupplement(e) {
  var supplements = Svg_supplements[e.currentTarget.id];
  Object.keys(supplements).forEach(function(supplementType) {
    var handler = SvgSupplements_supplementHandlers[supplementType];
    handler(supplements[supplementType])
  });
}

function MakeAbsolutePath(relative) {
  var basePath = location.href;
  var stack = basePath.split("/");
  var parts = relative.split("\\");
  if (parts.length == 1) {
    parts = relative.split("/");
  }
  stack.pop();
  for (var i = 0; i &lt; parts.length; i++) {
    if (parts[i] == "." || parts[i] == "")
      continue;
    if (parts[i] == "..")
      stack.pop();
    else
      stack.push(parts[i]);
  }
  return stack.join("/");
}

var SvgSupplements_supplementHandlers = {
  none: function () {},
  url: function (content) {
    content = SvgSupplements.urlRegExHelper.test(content) ? content : "http://"+content;
    var newTab = window.open(content, "");
    newTab.opener = null;
  },
  file: function (content) {
    content = SvgSupplements.fileRegExHelper.test(content) ? content : MakeAbsolutePath(content);
    var newTab = window.open(content);
    newTab.opener = null;
  },
  text: function (content) {
    if (SvgSupplements.htmlContainer &amp;&amp; SvgSupplements.textWrapper) {
      try {
      SvgSupplements.textContainer.innerHTML = content;
      SvgSupplements.htmlContainer.style.display = "block";
      SvgSupplements_prepareATags(SvgSupplements.textContainer);
    }
    catch(exception){
      console.log("Browser probably does not support the element 'foreignObject'");
      console.log(exception);
      }
    }
  }
}

function SvgSupplements_prepareATags(node){
  if (!node) return;
  var aTags = SvgCore_CollectionToArray(node.getElementsByTagName("a"));
  aTags.forEach(function(aTag){
    aTag.target = aTag.target || "_blank";
    aTag.rel = aTag.rel || "noopener noreferrer";
  })
}

// ZoomAndMove

function SvgZoomAndMove_Initialize() {
  console.log("Initializing SvgZoomAndMove")
  SvgZaM_initViewBoxAndBounds();
  SvgZaM_initZoomAndMoveFunctions();
}


var SvgZaM = {
  SvgWrapper: {
    el: null,
    bbox: null,
    boundingClientRect: null,
    viewBox: null
  },
  SvgContainer: {
    el: null,
    bbox: null,
    boundingClientRect: null,
    viewBox: null
  },
  moving: false,
}

function SvgZaM_initViewBoxAndBounds() {
  if (SvgCore &amp;&amp; Object.keys(SvgCore)) {
    SvgZaM = SvgCore
  } else {
    SvgZaM.SvgWrapper.el = document.getElementsByTagName("svg")[0]
    SvgZaM.SvgWrapper.bbox = SvgZaM.SvgWrapper.el.getBBox()
    SvgZaM.SvgWrapper.boundingClientRect = SvgZaM.SvgWrapper.el.getBoundingClientRect()
    SvgZaM.SvgWrapper.viewBox = SvgZaM.SvgWrapper.el.viewBox &amp;&amp; SvgZaM.SvgWrapper.el.viewBox.baseVal
    SvgZaM.SvgContainer.el = document.getElementById("SvgObjects")
    SvgZaM.SvgContainer.bbox = SvgZaM.SvgContainer.el.getBBox()
    SvgZaM.SvgContainer.boundingClientRect = SvgZaM.SvgContainer.el.getBoundingClientRect()
    SvgZaM.SvgContainer.viewBox = SvgZaM.SvgContainer.el.viewBox &amp;&amp; SvgZaM.SvgContainer.el.viewBox.baseVal
  }
  SvgZaM.zoomLevels = Array(1000, 600, 400, 200, 150, 100, 75, 50, 33, 25, 10)
  SvgZaM.scaleWidth = SvgZaM.SvgWrapper.viewBox.width / SvgZaM.SvgWrapper.el.clientWidth;
  SvgZaM.scaleHeight = SvgZaM.SvgWrapper.viewBox.height / SvgZaM.SvgWrapper.el.clientHeight;
  SvgZaM.moving = false;
}

function SvgZaM_initZoomAndMoveFunctions() {
  var svg = SvgZaM.SvgWrapper.el;
  var g = SvgZaM.SvgContainer.el;

  var backGroundRect = document.getElementById("SvgSankeyBackground");
  var svgSankey = document.getElementById("SvgSankey")
  var bgNotElements = SvgCore_CollectionToArray(SvgCore_findAll(svgSankey, ":not(g):not(text)"))
  var sankeyLegend = document.getElementById("SankeyLegend")
  if (sankeyLegend &amp;&amp; sankeyLegend.querySelector("rect")) bgNotElements.push(sankeyLegend.querySelector("rect"));
  var sankeyScale = document.getElementById("SankeyScale")
  if (sankeyScale &amp;&amp; sankeyScale.querySelector("rect")) bgNotElements.push(sankeyScale.querySelector("rect"))
  var transformList = g.transform.baseVal;
  var transformRequestObject = svg.createSVGTransform()

  var prevX = 0;
  var prevY = 0;

  svg.addEventListener("wheel", function(event) {
    if (event.ctrlKey)
    zoomOnScroll(event)
  });
  bgNotElements.forEach(function (el) {
    el.addEventListener("mousedown", function (event) {
      if (event.which == 1) {
        event.preventDefault();
        backGroundRect.classList.add("moving")      
        prevX = event.pageX;
        prevY = event.pageY;
        document.addEventListener("mousemove", movePicture, false);
      }
    });
    el.addEventListener("mouseup", function (event) {
      if (event.which == 1) {
        event.preventDefault();
        backGroundRect.classList.remove("moving")
        document.removeEventListener("mousemove", movePicture, false);
      }
    });
  })
  var zoomHelpers = {
    percentageToFactor: function(el) {return el / 100},
    sortAscending: function(a, b) {return a &gt; b ? 1 : -1}

  }
  var ZoomFactors = SvgZaM.zoomLevels.sort(zoomHelpers.sortAscending) &amp;&amp; SvgZaM.zoomLevels.map(zoomHelpers.percentageToFactor);
  var zoomFactor = ZoomFactors.indexOf(1) &gt;= 0 ? ZoomFactors.indexOf(1) : ZoomFactors.push(1) &amp;&amp; ZoomFactors.sort(zoomHelpers.sortAscending) &amp;&amp; ZoomFactors.indexOf(1);
  var zoomQuotient = 1;

  function zoomOnScroll(e) {
    e.preventDefault();
    var dir = e.deltaY === -0 ? 0 : e.deltaY &lt; 0 ? 1 : -1;
    if (dir == 0) {
      zoomQuotient = 1
    } else if (dir &lt; 0) {
      var newFactor = Math.max(0, zoomFactor + dir)
      zoomQuotient = ZoomFactors[newFactor] / ZoomFactors[zoomFactor]
      zoomFactor = newFactor
    } else if (dir &gt; 0) {
      var newFactor = Math.min(ZoomFactors.length - 1, zoomFactor + dir)
      zoomQuotient = ZoomFactors[newFactor] / ZoomFactors[zoomFactor]
      zoomFactor = newFactor
    }

    var xFactor = zoomQuotient;
    var yFactor = zoomQuotient;
    var mousePosi = SvgCore_getMouseCoords(e.pageX, e.pageY)

    transformRequestObject.setTranslate(mousePosi.x, mousePosi.y);
    transformList.appendItem(transformRequestObject);
    transformList.consolidate();
    transformRequestObject.setScale(xFactor, yFactor);
    transformList.appendItem(transformRequestObject);
    transformList.consolidate();
    transformRequestObject.setTranslate(-mousePosi.x, -mousePosi.y);
    transformList.appendItem(transformRequestObject);
    transformList.consolidate();
  }

  function movePicture(event) {
    var movement = {
      x: event.pageX - prevX,
      y: event.pageY - prevY
    }
    prevX = event.pageX;
    prevY = event.pageY;

    var currTransform = transformList.getItem(0)

    var scaleX = SvgZaM.scale.width * (currTransform.matrix.a || 1);
    var scaleY = SvgZaM.scale.height * (currTransform.matrix.d || 1);
    transformRequestObject.setTranslate(movement.x / scaleX, movement.y / scaleY);
    transformList.appendItem(transformRequestObject);
    transformList.consolidate().matrix;
  }
}
// Highlighting

function SvgHighlighting_Initialize() {
  console.log("Initializing SvgHighlighting")
  SvgHghlght.dataBlock = Svg_highlighting;
  SvgHghlght.arrows = SvgCore_CollectionToArray(SvgCore.SvgSankey.el.getElementsByClassName("arrowContainer"))
  SvgHghlght.processes = SvgCore_CollectionToArray(SvgCore.SvgSankey.el.getElementsByClassName("processContainer"))
  SvgHghlght.initConnections()
  SvgHghlght.initListeners()
}

var SvgHghlght = {
  classOpacity: "addOpacity",
  classHighlighted: "highlighted",
  isActive: false,
  nextMode: 0,
  lastElementFound: null,
  addHighlight: function (element) {
    element &amp;&amp; element.classList &amp;&amp; element.classList.add(SvgHghlght.classHighlighted);
  },
  addOpacity: function (element) {
    element.classList.add(SvgHghlght.classOpacity);
  }
}

SvgHghlght.initConnections = function() {
  var allConnections = SvgHghlght.dataBlock.connections;
  Object.keys(allConnections).forEach(function (process) {
    allConnections[process]["in"].forEach(function (arrowIn) {
      if (!allConnections[arrowIn]) allConnections[arrowIn] = {};
      allConnections[arrowIn]["destination"] = process;
    })
    allConnections[process]["out"].forEach(function (arrowOut) {
      if (!allConnections[arrowOut]) allConnections[arrowOut] = {};
      allConnections[arrowOut]["source"] = process;
    })
  });
}

SvgHghlght.initListeners = function() {
  var interactables = []
  interactables = interactables.concat(SvgCore_CollectionToArray(SvgCore.SvgSankey.el.getElementsByClassName("flow")))
  interactables = interactables.concat(SvgHghlght.processes)
  interactables.forEach(function (interactableEl) {
    interactableEl.addEventListener(
      "mouseup",
      function (e) {
        if (e.ctrlKey === true &amp;&amp; e.which === 1)
          SvgHghlght.mouseDownMiddleTrigger(e);
      },
      false
    );
  })
}

SvgHghlght.mouseDownMiddleTrigger = function(e) {
  SvgHghlght.toggleHighlightElements(e);
}

SvgHghlght.toggleHighlightElements = function(e) {
  if (SvgHghlght.isActive === true) {
    SvgHghlght.cleanUpHighlighting();
  }
  var elementFound = SvgCore_getFirstRelevantElement(e.srcElement, [
    "processContainer",
    "flow"
  ]);
  if (
    elementFound &amp;&amp;
    elementFound.nodeType === 1
  ) {
    if (elementFound.classList.contains("flow")) {
      if (elementFound !== SvgHghlght.lastElementFound) {
        SvgHghlght.nextMode = 0;
      }
      switch (SvgHghlght.nextMode) {
        case 0:
          SvgHghlght.highlightCurrentArrow(elementFound);
          SvgHghlght.nextMode = 1;
          break;
        case 1:
          SvgHghlght.highlightSameFlows(elementFound);
          SvgHghlght.nextMode = null;
          break;
        default:
          SvgHghlght.highlightNothing();
          SvgHghlght.nextMode = 0;
      }
    } else if (elementFound.classList.contains("processContainer")) {
      if (elementFound !== SvgHghlght.lastElementFound) {
        SvgHghlght.nextMode = 0;
      }
      switch (SvgHghlght.nextMode) {
        case 0:
          SvgHghlght.highlightProcessAndConnected(elementFound);
          SvgHghlght.nextMode = null;
          break;
        default:
          SvgHghlght.highlightNothing();
          SvgHghlght.nextMode = 0;
      }
    }
    SvgHghlght.isActive = true;
    SvgHghlght.lastElementFound = elementFound;
  }
}

SvgHghlght.cleanUpHighlighting = function() {
  var classesToCleanUp = [SvgHghlght.classOpacity, SvgHghlght.classHighlighted];
  classesToCleanUp.forEach(function (classToCleanUP) {
    var htmlCollectionOfClassX = document.getElementsByClassName(
      classToCleanUP
    );
    while (htmlCollectionOfClassX[0]) {
      htmlCollectionOfClassX[0].classList.remove(classToCleanUP);
    }
  })
}

SvgHghlght.getSourceAndDestination = function(arrowContainer) {
  var arr = [];
  var source = SvgHghlght.dataBlock.connections[arrowContainer.id].source
  var destination = SvgHghlght.dataBlock.connections[arrowContainer.id].destination
  if (source) arr.push(document.getElementById(source))
  if (destination) arr.push(document.getElementById(destination))
  return arr
}

SvgHghlght.highlightNothing = function() {}

SvgHghlght.highlightCurrentArrow = function(flowElement) {
  var arrowContainer = SvgCore_getFirstRelevantElement(flowElement, "arrowContainer");
  var elementsToHighlight = [].concat(
    SvgHghlght.getElementsFromContainer(arrowContainer),
    SvgHghlght.getElementsFromContainers(SvgHghlght.getSourceAndDestination(arrowContainer))
  )
  elementsToHighlight.forEach(SvgHghlght.addHighlight)

  var elementsToHide = SvgHghlght.getElementsToHide();
  elementsToHide.forEach(SvgHghlght.addOpacity);
}

SvgHghlght.highlightSameFlows = function(flowElement) {
  var flowEntry = undefined;
  Object.keys(SvgHghlght.dataBlock.entries).forEach(function (entry) {
    if (SvgHghlght.dataBlock.entries[entry].indexOf(flowElement.id) != -1) {
      flowEntry = entry;
    }
  })
  if (flowEntry) {
    var flowsAndStocksToHighlightIDs = SvgHghlght.dataBlock.entries[flowEntry];
    flowsAndStocksToHighlightIDs.forEach(function (flowOrStockId) {
      var flowOrStock = document.getElementById(flowOrStockId)
      if (flowOrStock) {
        SvgHghlght.addHighlight(flowOrStock);
        if (flowOrStock.classList.contains("flow")) {
          arrowContainer = SvgCore_getFirstRelevantElement(flowOrStock, "arrowContainer");
          var flowsInParent = SvgCore_CollectionToArray(arrowContainer.querySelectorAll(".flow"));
          var ownFlowOrder = -1;
          for (var flowIndx = 0; flowIndx &lt; flowsInParent.length; flowIndx++) {
            if (flowsInParent[flowIndx] == flowOrStock) {
              ownFlowOrder = flowIndx;
              break;
            }
          }
          var labels = SvgHghlght.getElementsFromContainer(arrowContainer).filter(function (element) {return element.nodeName == "tspan"})
          SvgHghlght.addHighlight(labels[ownFlowOrder]);
          var processElementsWithoutStocks = SvgHghlght.getElementsFromContainers(SvgHghlght.getSourceAndDestination(arrowContainer)).filter(function(elementInProcessContainer){
            return SvgCore_getFirstRelevantElement(elementInProcessContainer, ["processContainer", "stockContainer"]).classList.contains("processContainer");
          })
          processElementsWithoutStocks.forEach(SvgHghlght.addHighlight);
        } else if (flowOrStock.classList.contains("stock")) {          
          var processContainer = SvgCore_getFirstRelevantElement(flowOrStock, "processContainer");
          var stockContainer = SvgCore_getFirstRelevantElement(flowOrStock, "stockContainer");
          var stocksInContainer = SvgCore_CollectionToArray(stockContainer.querySelectorAll(".stock"));
          var ownFlowOrder = -1;
          for (var stockIndx = 0; stockIndx &lt; stocksInContainer.length; stockIndx++) {
            if (stocksInContainer[stockIndx] == flowOrStock) {
              ownFlowOrder = stockIndx;
              break;
            }
          }
          var labels = SvgHghlght.getElementsFromContainer(stockContainer).filter(function (element) {return element.nodeName == "tspan"})
          SvgHghlght.addHighlight(labels[ownFlowOrder]);
          var processElementsWithoutStocks = SvgHghlght.getElementsFromContainer(processContainer).filter(function(elementInProcessContainer){
            return SvgCore_getFirstRelevantElement(elementInProcessContainer, ["processContainer", "stockContainer"]).classList.contains("processContainer");
          })
          processElementsWithoutStocks.forEach(SvgHghlght.addHighlight);
        }
      }
    })
  }
  SvgHghlght.getElementsToHide().forEach(SvgHghlght.addOpacity);
}

SvgHghlght.highlightProcessAndConnected = function(processElement) {
  var toHighlight = [].concat(
        SvgHghlght.getElementsFromContainer(processElement)
    )
  var inputIDs = SvgHghlght.dataBlock.connections[processElement.id]["in"] ? SvgHghlght.dataBlock.connections[processElement.id]["in"] : [];
  var outputIDs = SvgHghlght.dataBlock.connections[processElement.id]["out"] ? SvgHghlght.dataBlock.connections[processElement.id]["out"] : [];
  var arrowIDs = [].concat(inputIDs, outputIDs)
  arrowIDs.forEach(function(arrowID) {
    toHighlight = toHighlight.concat(SvgHghlght.getElementsFromContainer(document.getElementById(arrowID)))
  });
  toHighlight.forEach(SvgHghlght.addHighlight);
  SvgHghlght.getElementsToHide().forEach(SvgHghlght.addOpacity);
}

SvgHghlght.getElementsFromContainer = function(container) {
  var arr = [];
  if (!container) return arr;
  if (container.classList.contains("label")) {
    arr = arr.concat(SvgCore_CollectionToArray(container.children))
  } else if (container.classList.contains("stockContainer")) {
    arr = arr.concat(SvgCore_CollectionToArray(container.querySelectorAll("path.stock, path.stroke")))
    arr = arr.concat(SvgHghlght.getElementsFromContainers(SvgCore_CollectionToArray(container.querySelectorAll("text.label"))))  
  } else if (container.classList.contains("arrowContainer")) {
    arr = arr.concat(SvgCore_CollectionToArray(container.querySelectorAll("path.flow, path.stroke")))
    arr = arr.concat(SvgHghlght.getElementsFromContainers(SvgCore_CollectionToArray(container.querySelectorAll("text.label"))))
  } else if (container.classList.contains("processContainer")) {
    arr = arr.concat(SvgCore_CollectionToArray(container.getElementsByClassName("processShape")))
    arr = arr.concat(SvgCore_CollectionToArray(container.getElementsByTagName("use")))
    arr = arr.concat(SvgCore_CollectionToArray(container.querySelectorAll("path.stock, path.stroke")))
    arr = arr.concat(SvgHghlght.getElementsFromContainers(SvgCore_CollectionToArray(container.querySelectorAll("text.label"))))
  }
  return arr;
}

SvgHghlght.getElementsFromContainers = function (containerArray) {
  var arr = [];
  if (!Array.isArray(containerArray)) return arr;
  containerArray.forEach(function (container) {
    arr = arr.concat(SvgHghlght.getElementsFromContainer(container))
  })
  return arr;
}

SvgHghlght.elementNotHighlighted = function (element) {
  return !element.classList.contains(SvgHghlght.classHighlighted);
}

SvgHghlght.getElementsToHide = function () {
  var arr = [];
  arr = arr.concat(SvgHghlght.getElementsFromContainers(SvgHghlght.processes))
  arr = arr.concat(SvgHghlght.getElementsFromContainers(SvgHghlght.arrows))
  arr = arr.filter(SvgHghlght.elementNotHighlighted)
  return arr;
}
</script>
  <style>tspan {
	white-space: pre;
}

#SvgSankey {
}

#SvgToolTip{
	transition: opacity 1s;
}

.highlighted { 
	filter: url(#highlightFilter);
}

.addOpacity {
	filter: url(#opacityFilter);
}

.hasLink:hover {
	cursor: pointer;
}

#SvgToolTipText {
	font-family: Helvetica, Arial, sans-serif;
}

#SvgToolTipText .title {
	font-size: 150%;
	font-weight: bold;
}

#SvgToolTipText .caption {
	font-size: 120%;
	font-weight: bold;
}

#SvgToolTipText .section {
	font-weight: bold;
}

#SvgToolTipText .flow {
}

#SvgToolTipText .stock {
	fill: #606060;
}

#SvgToolTipBackground {
	-webkit-backdrop-filter: blur(4px);
	backdrop-filter: blur(4px);
	opacity: 0.8
}
</style>
</svg>